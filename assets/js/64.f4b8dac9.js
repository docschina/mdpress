(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{571:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){var n=e.className,t=void 0===n?"":n,r=e.slotKey;return s.default.createElement(s.default.Fragment,null,s.default.createElement(l.default,{slotKey:r,className:t,markDownString:'\n# MdPress 的设计理念\n\nMdPress 的设计理念主要体现在以下几个方面：\n\n1. 插件化\n2. 约定大于配置\n3. 合理的优先级管理\n\n## 插件化\n\n引入了 [Plugin API](../plugin/README.md)，那么插件带来的好处究竟是什么呢？\n\n### 解耦\n\n有了插件，我们可以将很多核心功能用插件来实现，你可以在[这里](https://github.com/docschina/mdpress/tree/master/packages/%40mdpress/core/lib/node/internal-plugins)看到很多内置的插件，这些插件涵盖了很多 MdPress 的核心功能，在以前，它们糅合在代码库的各个地方，但现在，它们一目了然。\n\n### 配置的管理\n\n在过去，当我们遇到一些不太常见的需求时，我们会有一些疑虑：如果我们打算不支持，MdPress 的使用场景也就受到了限制；但如果想要支持它，我们就必须将其写到核心代码库中，并为其单独开设配置的 API。对于维护者来说，除了不利于长久的维护，这有时也会让我们心力交瘁。我们必须想到一些更好的解决办法，没错，这个办法就是插件。\n\n### `.mdpress/config.js` 也是插件\n\n没错，你的配置文件也是一个插件，因此，你可以直接使用插件 API，而不必为此新建一个插件，然后在配置中导入它。\n\n::: tip\n`.mdpress/config.js` 所支持的 API，实际上是在插件选项的基础上又新增了一些特定的选项。\n:::\n\n### `theme/index.js` 也是插件\n\n主题的根配置文件也是插件。\n\n::: tip\n和 `.mdpress/config.js` 一样，`theme/index.js` 所支持的选项，也是在插件选项的基础上，又新增了一些特定的选项。用一张图来表达它们的关系就是：\n\n<SvgContainer>\n<svg viewBox="0 0 2806 912" version="1.1" xmlns="http://www.w3.org/2000/svg">\n    <desc>Created with Sketch.</desc>\n    <defs></defs>\n    <g id="Page-1" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">\n        <rect id="Rectangle-3" fillOpacity="0" fill="#FFFFFF" x="0" y="0" width="2806" height="912"></rect>\n        <circle id="Oval" stroke="#979797" fill="#EC5975" cx="1212.5" cy="455.5" r="355.5"></circle>\n        <circle id="Oval" stroke="#979797" fill="#937AC4" cx="1592.5" cy="455.5" r="355.5"></circle>\n        <path d="M1402.5,155.000018 C1501.96722,218.018606 1568,329.058303 1568,455.520781 C1568,581.983259 1501.96722,693.022956 1402.5,756.041544 C1303.03279,693.022977 1237,581.983271 1237,455.520781 C1237,329.058291 1303.03279,218.018585 1402.50003,155 Z" id="Combined-Shape" stroke="#FFFFFF" strokeWidth="10" fill="#00BD8C"></path>\n        <text id=".mdpress/-config.js" fontFamily="ArialMT, Arial" fontSize="60" fontWeight="normal" fill="#FFFFFF">\n            <tspan x="901.101562" y="436">.mdpress/</tspan>\n            <tspan x="929.446289" y="503">config.js</tspan>\n        </text>\n        <text id="Plugin-API" fontFamily="ArialMT, Arial" fontSize="72" fontWeight="normal" fill="#FFFFFF">\n            <tspan x="1302.42773" y="436">Plugin</tspan>\n            <tspan x="1344.47461" y="516">API</tspan>\n        </text>\n        <text id="theme/-index.js" fontFamily="ArialMT, Arial" fontSize="60" fontWeight="normal" fill="#FFFFFF">\n            <tspan x="1662.78613" y="436">theme/</tspan>\n            <tspan x="1652.78125" y="503">index.js</tspan>\n        </text>\n    </g>\n</svg>\n</SvgContainer>\n:::\n\n\n### 在插件中使用插件\n\n在 MdPress 中，你拥有在插件中使用插件的能力：\n\n```js\n// mdpress-plugin-xxx\nmodule.exports = {\n  plugins: [\n    \'a\', \'b\', \'c\'\n  ]\n}\n```\n\n## 约定大于配置\n\nMdPress 1.0 开始引入一些约定，以减少用户过多的配置压力。对于这一点，最直观的体现是对[文档目录结构](../guide/directory-structure.md)和[主题目录结构](../theme/writing-a-theme.md#目录结构)的约定。\n\n未来我们可能还会结合社区的反馈来引入更多的约定，让我们拭目以待。\n\n\n## 合理的优先级管理\n\n资深的 MdPress 用户可能已经发现，主题开发者和普通的文档用户都具有定义全局的 `palette`、`style`、`templates` 和 `plugins` 的能力，那么他们是如何协同工作的呢？\n\n### 加载优先级\n\n`templates/*` 遵循一定的加载优先级，以 `templates/ssr.html` 为例：\n\n@flowstart\ncond1=>condition: 用户的 ssr.html\n是否存在?\ncond2=>condition: 主题的 ssr.html\n是否存在?\nstage1=>operation: 使用用户的 ssr.html\nstage2=>operation: 使用主题的 ssr.html\nstage3=>operation: 使用默认的 ssr.html\n\ncond1(no, right)->cond2(no)->stage3\ncond1(yes, bottom)->stage1\ncond2(yes, bottom)->stage2\n@flowend\n\n::: warning 注意\n当你想要去自定义 `templates/ssr.html` 或 `templates/dev.html` 时，最好基于 [默认的模板文件](https://github.com/docschina/mdpress/blob/master/packages/%40mdpress/core/lib/app/index.dev.html) 来修改，否则可能会导致构建出错。\n:::\n\n### Overriding\n\n对于 `palette.styl`、`index.styl` 和 `plugins`, 遵循 `overriding` 的原则：\n\n#### `palette.styl`\n\n用户的 `styles/palette.styl` 具有比主题的 `styles/palette.styl` 更高的优先级，因此主题可以先预定义一套调色板，而用户又可以根据自身需要修改它。例如：\n\n```stylus\n// theme/styles/palette.styl\n$accentColor = #0f0\n```\n\n```stylus\n// .mdpress/styles/palette.styl\n$accentColor = #f00\n```\n\n`$accentColor` 最终的值是 `#f00`。\n\n#### `index.styl`\n\n用户和主题的 `styles/index.styl` 都会被生成到最终的 CSS 文件中，但是默认情况下，用户的样式会生成在主题的样式后面，因此对于同样的选择器，用户的样式将具有更高的优先级，如：\n\n```stylus\n// theme/styles/index.styl\n.content\n  font-size 14px\n```\n\n```stylus\n// .mdpress/styles/index.styl\n.content\n  font-size 15px\n```\n\n最终生成的 CSS 文件如下：\n\n```css\n/* theme/styles/index.styl */\n.content {\n  font-size: 14px;\n}\n\n/* theme/styles/index.styl */\n.content {\n  font-size: 15px;\n}\n```\n\n#### `plugins`\n\n由于同名插件默认情况下只能应用一次，因此用户可以修改主题中预置的插件选项的默认值，如：\n\n```js\n// theme/index.js\nmodule.exports = {\n  plugins: [\n    \'mdpress-plugin-xxx\',\n    { name: \'foo\' }\n  ]\n}\n```\n\n```js\n// .mdpress/config.js\nmodule.exports = {\n  plugins: [\n    \'mdpress-plugin-xxx\',\n    { name: \'bar\' }\n  ]\n}\n```\n\nname 的最终值将是 `bar`.\n\n## 其他\n\n本着解耦的目标，引入 monorepo 后，我们也得以将 MdPress 分离成以下两个库：\n\n- [@mdpress/core](https://github.com/docschina/mdpress/tree/master/packages/@mdpress/core)：包含 dev、build 的核心实现和 Plugin API；\n- [@mdpress/theme-default](https://github.com/docschina/mdpress/tree/master/packages/@mdpress/theme-default)：你现在所看到的默认主题。\n\n当然，对于大多数用户来说，你并不需要关心上述三个库，[mdpress](https://www.npmjs.com/search?q=mdpress) 这个包已经将上述三个包组装在一起。\n'}))};var s=r(t(0)),l=r(t(608));function r(e){return e&&e.__esModule?e:{default:e}}},604:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){return r.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},r.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),r.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var s,l=t(0),r=(s=l)&&s.__esModule?s:{default:s};t(606)},605:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){var n=(0,l.default)().$page,t=e.pageKey,o=void 0===t?n.key:t,i=e.className,d=e.slotKey,u=void 0===d?"default":d;(0,a.setGlobalInfo)("pageKey",o);var c=r.default[o]||function(){return null};return s.default.createElement(c,{className:i,slotKey:u})};var s=o(t(0)),l=o(t(99)),r=o(t(164)),a=t(36);function o(e){return e&&e.__esModule?e:{default:e}}t(607)},606:function(e,n,t){},607:function(e,n,t){},608:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var s=y(t(100)),l=y(t(29)),r=y(t(166)),a=t(0),o=y(a),i=y(t(4)),d=t(101),u=y(t(99)),c=y(t(102)),f=t(165),m=y(t(609)),p=y(t(605)),g=y(t(604)),h=y(t(37));function y(e){return e&&e.__esModule?e:{default:e}}var v="server"===(0,t(36).getEnv)();function x(e){var n=e.markDownString,t=e.className,i=e.slotKey,y=(0,a.useRef)(e.md||h.default.createMD()).current,x=(0,u.default)(),b=x.$site,w=x.$page,M=(0,a.useState)(null),P=(0,l.default)(M,2),S=P[0],C=P[1],_=(0,a.useRef)(null);return(0,a.useEffect)((function(){C(document.getElementById(i))}),[]),(0,a.useEffect)((function(){"default"!==i&&_&&S&&((0,s.default)(S.childNodes).forEach((function(e,n){var t=_.current.childNodes[n];t?_.current.replaceChild(e,t):_.current.appendChild(e)})),S.parentNode.removeChild(S))}),[S]),"default"!==i?o.default.createElement("div",{ref:_}):((0,f.useComponentWillMount)((function(){!function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};e.use((function(e){return(0,d.SupportReactComponent)(e,{allowErrorLog:!0,sandbox:(0,r.default)({},n,t),babelInit:function(e){e.availablePlugins.filterXSS&&(e.availablePlugins.filterXSS=function(){return{}})}})}))}(y,c.default,{$site:b,$page:w,JSON:JSON,ClientOnly:m.default,console:console,Content:p.default,OutboundLink:g.default,$withBase:function(e){var n=b.base;return"/"===e.charAt(0)?n+e.slice(1):e}})})),v?o.default.createElement(F,{html:y.render(n),slotKey:i,className:t}):(0,a.useMemo)((function(){var e=y.render(n);return o.default.createElement(F,{html:e,slotKey:i,className:t})}),[n,i,t]))}function F(e){var n=e.html,t=e.slotKey,s=e.className;return o.default.createElement("div",{className:"content content__"+t+" "+s,dangerouslySetInnerHTML:{__html:n}})}x.propTypes={markDownString:i.default.string,className:i.default.string,scrollAnchor:i.default.bool,mdInit:i.default.func,md:i.default.object},x.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},n.default=x},609:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var s=a(t(29));n.default=function(e){var n=(0,l.useState)(!1),t=(0,s.default)(n,2),a=t[0],i=t[1],d=e.children,u=e.onSSR,c=void 0===u?r.default.createElement(o,null):u;return(0,l.useEffect)((function(){i(!0)}),[]),a?d:c};var l=t(0),r=a(l);function a(e){return e&&e.__esModule?e:{default:e}}var o=function(){return r.default.createElement("span",null)}}}]);