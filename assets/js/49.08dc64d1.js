(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{595:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=n.className,t=void 0===e?"":e,s=n.slotKey;return a.default.createElement(a.default.Fragment,null,a.default.createElement(r.default,{slotKey:s,className:t,markDownString:"\n# 配置\n\n## 基本配置\n\n### base\n\n- 类型: `string`\n- 默认值: `/`\n\n部署站点的基础路径，如果你想让你的网站部署到一个子路径下，你将需要设置它。如 GitHub pages，如果你想将你的网站部署到 `https://foo.github.io/bar/`，那么 `base` 应该被设置成 `\"/bar/\"`，它的值应当总是以斜杠开始，并以斜杠结束。\n\n`base` 将会作为前缀自动地插入到所有以 `/` 开始的其他选项的链接中，所以你只需要指定一次。\n\n**参考:**\n\n- [基础路径](../guide/assets.md#基础路径)\n- [部署指南 > GitHub Pages](../guide/deploy.md#github-pages)\n\n### title\n\n- 类型: `string`\n- 默认值: `undefined`\n\n网站的标题，它将会被用作所有页面标题的前缀，同时，默认主题下，它将显示在导航栏（navbar）上。\n\n### description\n\n- 类型: `string`\n- 默认值: `undefined`\n\n网站的描述，它将会以 `<meta>` 标签渲染到当前页面的 HTML 中。\n\n### head\n\n- 类型: `Array`\n- 默认值: `[]`\n\n额外的需要被注入到当前页面的 HTML `<head>` 中的标签，每个标签都可以以 `[tagName, { attrName: attrValue }, innerHTML?]` 的格式指定，举个例子，增加一个自定义的 favicon：\n\n``` js\nmodule.exports = {\n  head: [\n    ['link', { rel: 'icon', href: '/logo.png' }]\n  ]\n}\n```\n\n### host\n\n- 类型: `string`\n- 默认值: `'0.0.0.0'`\n\n指定用于 dev server 的主机名。\n\n### port\n\n- 类型: `number`\n- 默认值: `8080`\n\n指定 dev server 的端口。\n\n### temp\n\n- Type: `string`\n- Default: `/path/to/@mdpress/core/.temp`\n\n指定客户端文件的临时目录。\n\n### dest\n\n- 类型: `string`\n- 默认值: `.mdpress/dist`\n\n指定 `mdpress build` 的输出目录。如果传入的是相对路径，则会基于 `process.cwd()` 进行解析。\n\n### locales\n\n- 类型: `{ [path: string]: Object }`\n- 默认值: `undefined`\n\n提供多语言支持的语言配置。具体细节请查看 [多语言支持](../guide/i18n.md)。\n\n### shouldPrefetch\n\n- 类型: `Function`\n- 默认值: `() => true`\n\n一个函数，用来控制对于哪些文件，是需要生成 `<link rel=\"prefetch\">` 资源提示的。\n\n### cache\n\n- 类型: `boolean|string`\n- 默认值: `true`\n\nMdPress 默认使用了 [cache-loader](https://github.com/webpack-contrib/cache-loader)  来大大地加快 webpack 的编译速度。\n\n此选项可以用于指定 cache 的路径，同时也可以通过设置为 `false` 来在每次构建之前删除 cache。\n\n::: tip\n这个选项也可以通过命令行来使用：\n```bash\nmdpress dev docs --cache .cache # 设置 cache 路径\nmdpress dev docs --no-cache     # 在每次构建前删除 cache\n```\n:::\n\n### extraWatchFiles\n\n- 类型: `Array`\n- 默认值: `[]`\n\n指定额外的需要被监听的文件。\n\n你可以监听任何想监听的文件，文件变动将会触发 `mdpress` 重新构建，并实时更新。\n\n``` js\nmodule.exports = {\n  extraWatchFiles: [\n    '.mdpress/foo.js', // 使用相对路径\n    '/path/to/bar.js'   // 使用绝对路径\n  ]\n}\n```\n\n### patterns\n\n- Type: `Array`\n- Default: `['**/*.md', '**/*.js']`\n\n指定你想要解析的文件模式。\n\n## Styling\n\n### palette.styl\n\n如果要对[默认预设](https://github.com/docschina/mdpress/blob/master/packages/@mdpress/core/lib/client/style/config.styl)的样式进行简单的替换，或者定义一些变量供以后使用，你可以创建一个 `.mdpress/styles/palette.styl` 文件。\n\n你可以调整的一些变量如下:\n\n``` stylus\n// 颜色\n$accentColor = #3eaf7c\n$textColor = #2c3e50\n$borderColor = #eaecef\n$codeBgColor = #282c34\n$arrowBgColor = #ccc\n$badgeTipColor = #42b983\n$badgeWarningColor = darken(#ffe564, 35%)\n$badgeErrorColor = #DA5961\n\n// 布局\n$navbarHeight = 3.6rem\n$sidebarWidth = 20rem\n$contentWidth = 740px\n$homePageWidth = 960px\n\n// 响应式变化点\n$MQNarrow = 959px\n$MQMobile = 719px\n$MQMobileNarrow = 419px\n```\n\n::: danger Note\n你应该**只在**这个文件中定义变量。因为 `palette.styl` 将在根的 stylus 配置文件的末尾引入，作为配置，它将被多个文件使用，所以一旦你在这里写了样式，你的样式就会被多次复制。\n:::\n\n### index.styl\n\nMdPress 提供了一种添加额外样式的简便方法。你可以创建一个 `.mdpress/styles/index.styl` 文件。这是一个 [Stylus](http://stylus-lang.com/) 文件，但你也可以使用正常的 CSS 语法。\n\n```stylus\n.content {\n  font-size 30px\n}\n```\n\n**参考:**\n\n- [为什么不能把 `palette.styl` 和 `index.styl` 合并到一个 API?](../faq/#为什么不能把-palette-styl-和-index-styl-合并到一个-api)\n\n## 主题\n\n### theme\n\n- 类型: `string`\n- 默认值: `undefined`\n\n当你使用自定义主题的时候，需要指定它。\n\n**参考:**\n\n- [使用主题](../theme/using-a-theme.md).\n\n### themeConfig\n\n- 类型: `Object`\n- 默认值: `{}`\n\n为当前的主题提供一些配置，这些选项依赖于你正在使用的主题。\n\n**也可以参考:**\n\n- [默认主题](../theme/default-theme-config.md)。\n\n## Pluggable\n\n### plugins\n\n- 类型: `Object|Array`\n- 默认值: `undefined`\n\n请参考 [插件 > 使用插件](../plugin/using-a-plugin.md) 来使用一个插件。\n\n## Markdown\n\nMarkdown 分为 Node 端和客户端的配置，[客户端的配置](../guide/basic-config.html#应用级别的配置)需要在 `enhanceApp` 中进行。\n\n### markdown.lineNumbers<Badge text=\"client\"/>\n\n- 类型: `boolean`\n- 默认值: `undefined`\n\n是否在每个代码块的左侧显示行号。\n\n**参考:**\n\n- [行号](../guide/markdown.md#行号)\n\n### markdown.slugify<Badge text=\"client\"/>\n\n- 类型: `Function`\n- 默认值: [source](https://github.com/docschina/mdpress/tree/master/packages/@mdpress/shared-utils/src/slugify.ts)\n\n一个将标题文本转换为 slug 的函数。修改它会影响 [标题](../miscellaneous/glossary.md#headers)、[目录](../guide/markdown.md#目录)、以及[侧边栏](../theme/default-theme-config.md#侧边栏)链接的 id 和 链接。\n\n### markdown.anchor<Badge text=\"client\"/>\n\n- 类型: `Object`\n- 默认值: `{ permalink: true, permalinkBefore: true, permalinkSymbol: '#' }`\n\n[markdown-it-anchor](https://github.com/valeriangalliat/markdown-it-anchor) 的选项。\n\n### markdown.externalLinks<Badge text=\"client\"/>\n\n- 类型: `Object`\n- 默认值: `{ target: '_blank', rel: 'noopener noreferrer' }`\n\n这个键值对将会作为特性被增加到是外部链接的 `<a>` 标签上，默认的选项将会在新窗口中打开一个该外部链接。\n\n### markdown.toc<Badge text=\"client\"/>\n\n- 类型: `Object`\n- 默认值: `{ includeLevel: [2, 3] }`\n\n[markdown-it-table-of-contents](https://github.com/Oktavilla/markdown-it-table-of-contents) 的选项。\n\n### markdown.extendMarkdown<Badge text=\"client\"/>\n\n- 类型: `Function`\n- 默认值: `undefined`\n\n一个用于修改当前的 [markdown-it](https://github.com/markdown-it/markdown-it) 实例的默认配置，或者应用额外的插件的函数，举例如下：\n\n``` js\nmodule.exports = {\n  markdown: {\n    extendMarkdown: md => {\n      md.set({ breaks: true })\n      md.use(require('markdown-it-xxx'))\n    }\n  }\n}\n```\n\n### markdown.extractHeaders<Badge text=\"node\"/>\n\n- 类型: `Array`\n- 默认值: `['h2', 'h3']`\n\nMarkdown 文件的 headers (标题 & 小标题) 会在准备阶段被提取出来，并存储在 `this.$page.headers` 中。默认情况下，MdPress 会提取 `h2` 和 `h3` 标题。你可以通过这个选项来修改提取出的标题级别。\n \n``` js\nmodule.exports = {\n  markdown: {\n    extractHeaders: [ 'h2', 'h3', 'h4' ]\n  }\n}\n```\n\n## 构建流程\n\n### postcss\n\n- 类型: `Object`\n- 默认值: `{ plugins: [require('autoprefixer')] }`\n\n[postcss-loader](https://github.com/postcss/postcss-loader) 的选项，请注意，指定这个值，将会覆盖内置的 autoprefixer，所以你需要自己将它加进去。\n\n### stylus\n\n- 类型: `Object`\n- 默认值: `{ preferPathResolver: 'webpack' }`\n\n[stylus-loader](https://github.com/shama/stylus-loader) 的选项。\n\n### scss\n\n- 类型: `Object`\n- 默认值: `{}`\n\n加载 `*.scss` 文件的 [sass-loader](https://github.com/webpack-contrib/sass-loader) 的选项。\n\n### sass\n\n- 类型: `Object`\n- 默认值: `{ indentedSyntax: true }`\n\n加载 `*.sass` 文件的 [sass-loader](https://github.com/webpack-contrib/sass-loader) 的选项。\n\n### less\n\n- 类型: `Object`\n- Default: `{}`\n\n[less-loader](https://github.com/webpack-contrib/less-loader) 的选项。\n\n### configureWebpack\n\n- 类型: `Object | Function`\n- 默认值: `undefined`\n\n用于修改内部的 Webpack 配置。如果给定一个对象，那么它将会被 [webpack-merge](https://github.com/survivejs/webpack-merge) 合并到最终的配置中，如果给定一个函数，它将会接受 `config` 作为第一个参数，以及 `isServer` 作为第二个参数，你可以直接更改 `config`，也可以返回一个待合并的对象。\n\n``` js\nmodule.exports = {\n  configureWebpack: (config, isServer) => {\n    if (!isServer) {\n      // 修改客户端的 webpack 配置\n    }\n  }\n}\n```\n\n### chainWebpack\n\n- 类型: `Function`\n- 默认值: `undefined`\n\n通过 [webpack-chain](https://github.com/mozilla-neutrino/webpack-chain) 来修改内部的 Webpack 配置。\n\n``` js\nmodule.exports = {\n  chainWebpack: (config, isServer) => {\n    // config 是 ChainableConfig 的一个实例\n  }\n}\n```"}))};var a=s(t(0)),r=s(t(608));function s(n){return n&&n.__esModule?n:{default:n}}},604:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){return s.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},s.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),s.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var a,r=t(0),s=(a=r)&&a.__esModule?a:{default:a};t(606)},605:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=(0,r.default)().$page,t=n.pageKey,l=void 0===t?e.key:t,d=n.className,c=n.slotKey,i=void 0===c?"default":c;(0,o.setGlobalInfo)("pageKey",l);var u=s.default[l]||function(){return null};return a.default.createElement(u,{className:d,slotKey:i})};var a=l(t(0)),r=l(t(99)),s=l(t(164)),o=t(36);function l(n){return n&&n.__esModule?n:{default:n}}t(607)},606:function(n,e,t){},607:function(n,e,t){},608:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=b(t(100)),r=b(t(29)),s=b(t(166)),o=t(0),l=b(o),d=b(t(4)),c=t(101),i=b(t(99)),u=b(t(102)),f=t(165),m=b(t(609)),p=b(t(605)),h=b(t(604)),g=b(t(37));function b(n){return n&&n.__esModule?n:{default:n}}var v="server"===(0,t(36).getEnv)();function k(n){var e=n.markDownString,t=n.className,d=n.slotKey,b=(0,o.useRef)(n.md||g.default.createMD()).current,k=(0,i.default)(),y=k.$site,x=k.$page,M=(0,o.useState)(null),j=(0,r.default)(M,2),S=j[0],_=j[1],N=(0,o.useRef)(null);return(0,o.useEffect)((function(){_(document.getElementById(d))}),[]),(0,o.useEffect)((function(){"default"!==d&&N&&S&&((0,a.default)(S.childNodes).forEach((function(n,e){var t=N.current.childNodes[e];t?N.current.replaceChild(n,t):N.current.appendChild(n)})),S.parentNode.removeChild(S))}),[S]),"default"!==d?l.default.createElement("div",{ref:N}):((0,f.useComponentWillMount)((function(){!function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};n.use((function(n){return(0,c.SupportReactComponent)(n,{allowErrorLog:!0,sandbox:(0,s.default)({},e,t),babelInit:function(n){n.availablePlugins.filterXSS&&(n.availablePlugins.filterXSS=function(){return{}})}})}))}(b,u.default,{$site:y,$page:x,JSON:JSON,ClientOnly:m.default,console:console,Content:p.default,OutboundLink:h.default,$withBase:function(n){var e=y.base;return"/"===n.charAt(0)?e+n.slice(1):n}})})),v?l.default.createElement(w,{html:b.render(e),slotKey:d,className:t}):(0,o.useMemo)((function(){var n=b.render(e);return l.default.createElement(w,{html:n,slotKey:d,className:t})}),[e,d,t]))}function w(n){var e=n.html,t=n.slotKey,a=n.className;return l.default.createElement("div",{className:"content content__"+t+" "+a,dangerouslySetInnerHTML:{__html:e}})}k.propTypes={markDownString:d.default.string,className:d.default.string,scrollAnchor:d.default.bool,mdInit:d.default.func,md:d.default.object},k.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},e.default=k},609:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=o(t(29));e.default=function(n){var e=(0,r.useState)(!1),t=(0,a.default)(e,2),o=t[0],d=t[1],c=n.children,i=n.onSSR,u=void 0===i?s.default.createElement(l,null):i;return(0,r.useEffect)((function(){d(!0)}),[]),o?c:u};var r=t(0),s=o(r);function o(n){return n&&n.__esModule?n:{default:n}}var l=function(){return s.default.createElement("span",null)}}}]);