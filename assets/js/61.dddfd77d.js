(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{568:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=n.className,t=void 0===e?"":e,o=n.slotKey;return r.default.createElement(r.default.Fragment,null,r.default.createElement(a.default,{slotKey:o,className:t,markDownString:'# Markdown 拓展\n\n## 标题锚点\n\n所有的标题将会自动地应用锚点链接，锚点的渲染规则可以通过 enhanceApp 中 `mdConfig.anchor` 来配置。\n\n## 链接\n\n### 内部链接\n\n网站内部的链接，将会被转换成 `<a>` 用于 SPA 导航。同时，站内的每一个文件夹下的 `README.md` 或者 `index.md` 文件都会被自动编译为 `index.html`，对应的链接将被视为 `/`。\n\n以如下的文件结构为例：\n\n```\n.\n├─ README.md\n├─ foo\n│  ├─ README.md\n│  ├─ one.md\n│  └─ two.md\n└─ bar\n   ├─ README.md\n   ├─ three.md\n   └─ four.md\n```\n\n假设你现在在 `foo/one.md` 中：\n\n``` md\n[Home](/) \x3c!-- 跳转到根部的 README.md --\x3e\n[foo](/foo/) \x3c!-- 跳转到 foo 文件夹的 index.html --\x3e\n[foo heading](./#heading) \x3c!-- 跳转到 foo/index.html 的特定标题位置 --\x3e\n[bar - three](../bar/three.md) \x3c!-- 具体文件可以使用 .md 结尾（推荐） --\x3e\n[bar - four](../bar/four.html) \x3c!-- 也可以用 .html --\x3e\n```\n\n\x3c!--\n### 链接的重定向\n\nMdPress 支持重定向到干净链接。如果一个链接 `/foo` 找不到，MdPress 会自行寻找一个可用的 `/foo/` 或 `/foo.html`。反过来，当 `/foo/` 或 `/foo.html` 中的一个找不到时，MdPress 也会尝试寻找另一个。借助这种特性，我们可以通过官方插件 [mdpress-plugin-clean-urls]() 定制你的网站路径。\n\n::: tip 注意\n无论是否使用了 permalink 和 clean-urls 插件，你的相对路径都应该依赖于当前的文件结构来定义。在上面的例子中，即使你将 `/foo/one.md` 的路径设为了 `/foo/one/`，你依然应该通过 `./two.md` 来访问 `/foo/two.md`。\n:::\n--\x3e\n\n### 外部链接\n\n外部的链接将会被自动地设置为  `target="_blank" rel="noopener noreferrer"`:\n\n- [react.org](https://reactjs.org/)\n- [MdPress on GitHub](https://github.com/docschina/mdpress)\n\n你可以自定义通过配置 enhanceApp 中 `mdConfig.externalLinks` 来自定义外部链接的特性。\n\n## Front Matter\n\nMdPress 提供了对 [YAML front matter](https://jekyllrb.com/docs/frontmatter/) 开箱即用的支持:\n\n``` yaml\n---\ntitle: Blogging Like a Hacker\nlang: en-US\n---\n```\n\n这些数据可以在当前 markdown 的正文，或者是任意的自定义或主题组件中使用。\n\n想了解更多，请移步 [Front Matter](./frontmatter.md)。\n\n## GitHub 风格的表格\n\n**输入**\n\n```\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n```\n\n**输出**\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n## Emoji\n\n**输入**\n\n```\n:tada: :100:\n```\n\n**输出**\n\n:tada: :100:\n\n你可以在[这个列表](https://github.com/markdown-it/markdown-it-emoji/blob/master/lib/data/full.json)找到所有可用的 Emoji。\n\n## 目录\n\n**输入**\n\n```\n[[toc]]\n```\n\n**输出**\n\n\x3c!--lint disable no-shortcut-reference-link no-undefined-references--\x3e\n\n[[toc]]\n\n\x3c!--lint enable no-shortcut-reference-link no-undefined-references--\x3e\n\n目录（Table of Contents）的渲染可以通过  [`markdown.toc`](../config/README.md#markdown-toc) 选项来配置。\n\n## 自定义容器 <Badge text="默认主题"/>\n\n**输入**\n\n```md\n::: tip\n这是一个提示\n:::\n\n::: warning\n这是一个警告\n:::\n\n::: danger\n这是一个危险警告\n:::\n\n::: details\n这是一个详情块，在 IE / Edge 中不生效\n:::\n```\n\n**输出**\n\n::: tip\n这是一个提示\n:::\n\n::: warning\n这是一个警告\n:::\n\n::: danger\n这是一个危险警告\n:::\n\n::: details\n这是一个详情块，在 IE / Edge 中不生效\n:::\n\n你也可以自定义块中的标题：\n\n````md\n::: danger STOP\n危险区域，禁止通行\n:::\n\n::: details 点击查看代码\n```js\nconsole.log(\'你好，MdPress！\')\n```\n:::\n````\n\n::: danger STOP\n危险区域，禁止通行\n:::\n\n::: details 点击查看代码\n```js\nconsole.log(\'你好，MdPress！\')\n```\n:::\n\n## 代码块中的语法高亮\n\nMdPress 使用了 [Prism](https://prismjs.com/) 来为 markdown 中的代码块实现语法高亮。Prism 支持大量的编程语言，你需要做的只是在代码块的开始倒勾中附加一个有效的语言别名：\n\n**输入**\n\n````\n``` js\nexport default {\n  name: \'MyComponent\',\n  // ...\n}\n```\n````\n\n**输出**\n\n``` js\nexport default {\n  name: \'MyComponent\',\n  // ...\n}\n```\n\n**输入**\n\n````text\n``` html\n<ul>\n  <li\n  >\n    test\n  </li>\n</ul>\n```\n````\n\n**输出**\n\n``` html\n<ul>\n  <li\n  >\n    test\n  </li>\n</ul>\n```\n\n在 Prism 的网站上查看 [合法的语言列表](https://prismjs.com/#languages-list)。\n\n## 代码块中的行高亮\n\n**输入**\n\n````\n``` js {4}\nexport default {\n  data () {\n    return {\n      msg: \'Highlighted!\'\n    }\n  }\n}\n```\n````\n\n**输出**\n\n``` js{4}\nexport default {\n  data () {\n    return {\n      msg: \'Highlighted!\'\n    }\n  }\n}\n```\n\n## 行号\n\n你可以通过配置来为每个代码块显示行号：\n\n``` js\nmodule.exports = {\n  markdown: {\n    lineNumbers: true\n  }\n}\n```\n\n\x3c!-- TODO Support line numbers for specific fence block --\x3e\n\n- 示例:\n\n<picture>\n  <source srcset="/line-numbers-desktop.png" media="(min-width: 719px)">\n  <img class="line-numbers-desktop-snap" alt="Image">\n</picture>\n\n<picture>\n  <source srcset="/line-numbers-mobile.gif" media="(max-width: 719px)">\n  <img class="line-numbers-mobile-snap" alt="Image">\n</picture>\n\n<style>\n  @media screen and (min-width:  719px) {\n    .line-numbers-mobile-snap {\n       display: none;\n    }\n  }\n  @media screen and (max-width:  719px) {\n    .line-numbers-desktop-snap {\n       display: none;\n    }\n    .line-numbers-mobile-snap {\n      max-width: none!important;\n      margin: 0 -1.5rem;\n      width: 100vw;\n    }\n  }\n</style>\n\n## 导入代码段 <Badge text="beta" type="warning"/>\n\n你可以通过下述的语法导入已经存在的文件中的代码段：\n\n``` md\n<<< @/filepath\n```\n\n它也支持 [行高亮](#代码块中的行高亮)：\n\n``` md\n<<< @/filepath{highlightLines}\n```\n\n**输入**\n\n```\n<<< @/../@mdpress/markdown/__tests__/fragments/snippet.js{2}\n```\n\n**输出**\n\n\x3c!--lint disable strong-marker--\x3e\n\n<<< @/../@mdpress/markdown/__tests__/fragments/snippet.js{2}\n\n\x3c!--lint enable strong-marker--\x3e\n\n::: tip 注意\n由于代码段的导入将在 webpack 编译之前执行，因此你无法使用 webpack 中的路径别名，此处的 `@` 默认值是 `process.cwd()`。\n:::\n\n## 进阶配置\n\nMdPress 使用 [markdown-it](https://github.com/markdown-it/markdown-it) 来渲染 Markdown，上述大多数的拓展也都是通过自定义的插件实现的。想要进一步的话，你可以通过 `.mdpress/enhaceApp.js` 的 `mdConfig` 选项，来对当前的 `markdown-it` 实例做一些自定义的配置：\n\n``` js\nexport default ({\n  mdConfig, // 当前应用的 Markdown 额外配置\n}) => {\n  mdConfig = Object.assign({},mdConfig,{\n   // markdown-it-anchor 的选项\n   anchor: { permalink: false },\n   // markdown-it-toc 的选项\n   toc: { includeLevel: [1, 2] },\n   extendMarkdown: md => {\n     // 使用更多的 markdown-it 插件!\n     md.use(require(\'markdown-it-xxx\'))\n   }\n  })\n}\n```\n'}))};var r=o(t(0)),a=o(t(608));function o(n){return n&&n.__esModule?n:{default:n}}},604:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){return o.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},o.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),o.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var r,a=t(0),o=(r=a)&&r.__esModule?r:{default:r};t(606)},605:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=(0,a.default)().$page,t=n.pageKey,s=void 0===t?e.key:t,d=n.className,i=n.slotKey,u=void 0===i?"default":i;(0,l.setGlobalInfo)("pageKey",s);var c=o.default[s]||function(){return null};return r.default.createElement(c,{className:d,slotKey:u})};var r=s(t(0)),a=s(t(99)),o=s(t(164)),l=t(36);function s(n){return n&&n.__esModule?n:{default:n}}t(607)},606:function(n,e,t){},607:function(n,e,t){},608:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=b(t(100)),a=b(t(29)),o=b(t(166)),l=t(0),s=b(l),d=b(t(4)),i=t(101),u=b(t(99)),c=b(t(102)),m=t(165),f=b(t(609)),p=b(t(605)),g=b(t(604)),h=b(t(37));function b(n){return n&&n.__esModule?n:{default:n}}var w="server"===(0,t(36).getEnv)();function x(n){var e=n.markDownString,t=n.className,d=n.slotKey,b=(0,l.useRef)(n.md||h.default.createMD()).current,x=(0,u.default)(),v=x.$site,M=x.$page,E=(0,l.useState)(null),_=(0,a.default)(E,2),y=_[0],j=_[1],P=(0,l.useRef)(null);return(0,l.useEffect)((function(){j(document.getElementById(d))}),[]),(0,l.useEffect)((function(){"default"!==d&&P&&y&&((0,r.default)(y.childNodes).forEach((function(n,e){var t=P.current.childNodes[e];t?P.current.replaceChild(n,t):P.current.appendChild(n)})),y.parentNode.removeChild(y))}),[y]),"default"!==d?s.default.createElement("div",{ref:P}):((0,m.useComponentWillMount)((function(){!function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};n.use((function(n){return(0,i.SupportReactComponent)(n,{allowErrorLog:!0,sandbox:(0,o.default)({},e,t),babelInit:function(n){n.availablePlugins.filterXSS&&(n.availablePlugins.filterXSS=function(){return{}})}})}))}(b,c.default,{$site:v,$page:M,JSON:JSON,ClientOnly:f.default,console:console,Content:p.default,OutboundLink:g.default,$withBase:function(n){var e=v.base;return"/"===n.charAt(0)?e+n.slice(1):n}})})),w?s.default.createElement(k,{html:b.render(e),slotKey:d,className:t}):(0,l.useMemo)((function(){var n=b.render(e);return s.default.createElement(k,{html:n,slotKey:d,className:t})}),[e,d,t]))}function k(n){var e=n.html,t=n.slotKey,r=n.className;return s.default.createElement("div",{className:"content content__"+t+" "+r,dangerouslySetInnerHTML:{__html:e}})}x.propTypes={markDownString:d.default.string,className:d.default.string,scrollAnchor:d.default.bool,mdInit:d.default.func,md:d.default.object},x.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},e.default=x},609:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=l(t(29));e.default=function(n){var e=(0,a.useState)(!1),t=(0,r.default)(e,2),l=t[0],d=t[1],i=n.children,u=n.onSSR,c=void 0===u?o.default.createElement(s,null):u;return(0,a.useEffect)((function(){d(!0)}),[]),l?i:c};var a=t(0),o=l(a);function l(n){return n&&n.__esModule?n:{default:n}}var s=function(){return o.default.createElement("span",null)}}}]);