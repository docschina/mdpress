(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{545:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){var n=e.className,t=void 0===n?"":n,l=e.slotKey;return o.default.createElement(o.default.Fragment,null,o.default.createElement(a.default,{slotKey:l,className:t,markDownString:"\n# [@mdpress/plugin-pwa](https://github.com/docschina/mdpress/tree/master/packages/%40mdpress/plugin-pwa)\n\n> PWA plugin\n\n## Install\n\n```bash\nyarn add -D @mdpress/plugin-pwa\n# OR npm install -D @mdpress/plugin-pwa\n```\n\n## Usage\n\n```javascript\nmodule.exports = {\n  plugins: ['@mdpress/pwa']\n}\n```\n\n::: tip\nTo make your site fully PWA-compliant, you need to:\n\n- provide a web app manifest and icons in `.mdpress/public`,\n- add correct [head links](/config/#head) in `.mdpress/config.js` (see example below).\n\nFor more details, see [MDN docs about the Web App Manifest](https://developer.mozilla.org/en-US/docs/Web/Manifest).\n:::\n\nHere is an example of a fully PWA-compliant configuration with MdPress:\n\n```javascript\nmodule.exports = {\n  head: [\n    ['link', { rel: 'icon', href: '/logo.png' }],\n    ['link', { rel: 'manifest', href: '/manifest.json' }],\n    ['meta', { name: 'theme-color', content: '#3eaf7c' }],\n    ['meta', { name: 'apple-mobile-web-app-capable', content: 'yes' }],\n    ['meta', { name: 'apple-mobile-web-app-status-bar-style', content: 'black' }],\n    ['link', { rel: 'apple-touch-icon', href: '/icons/apple-touch-icon-152x152.png' }],\n    ['link', { rel: 'mask-icon', href: '/icons/safari-pinned-tab.svg', color: '#3eaf7c' }],\n    ['meta', { name: 'msapplication-TileImage', content: '/icons/msapplication-icon-144x144.png' }],\n    ['meta', { name: 'msapplication-TileColor', content: '#000000' }]\n  ],\n  plugins: [\n    [\n      '@mdpress/pwa',\n      {\n        serviceWorker: true,\n        updatePopup: true\n      }\n    ]\n  ],\n}\n```\n\n## Options\n\n### serviceWorker\n\n- Type: `boolean`\n- Default: `true`\n\nIf set to `true`, MdPress will automatically generate and register a [service worker](https://developers.google.com/web/fundamentals/primers/service-workers/) that caches the content for offline use (only enabled in production).\n\nThere is a aliased module `@sw-event` module that will also be emitting the following events:\n\n- `sw-ready`\n- `sw-cached`\n- `sw-updated`\n- `sw-offline`\n- `sw-error`\n\n::: tip\nSince you can only register service workers under HTTPs URLs, make sure you can deploy your site with SSL before enabling this option.\n:::\n\n### generateSWConfig\n\n- Type: `object`\n- Default: `{}`\n\n[generateSW config](https://developers.google.com/web/tools/workbox/modules/workbox-build#full_generatesw_config) of workbox-build.\n\n\n### updatePopup\n\n- Type: `boolean|object`\n- Default: `undefined`\n\nThe definition of type `popupConfig` is as follows:\n\n```typescript\ninterface normalPopupConfig {\n  message: string; // defaults to 'New content is available.'\n  buttonText: string; // defaults to 'Refresh'\n}\n\ninterface localedPopupConfig {\n  [localePath: string]: normalPopupConfig\n}\n\ntype popupConfig = normalPopupConfig | localedPopupConfig\n```\n\nThis option enables the popup to refresh contents. The popup will be shown when the site is updated (i.e. service worker is updated). It provides `refresh` button to allow users to refresh contents immediately.\n\n> If without the `refresh` button, the new service worker will be active after all [clients](https://developer.mozilla.org/en-US/docs/Web/API/Clients) are closed. This means that visitors cannot see new contents until they close all tabs of your site. But the `refresh` button activates the new service worker immediately.\n\n### popupComponent\n\n- Type: `string`\n- Default: `undefined`\n\nA custom component to replace the default popup component.\n\n**Also see:**\n\n- [Customize the SW-Update Popup UI](#customize-the-ui-of-sw-update-popup)\n\n## Customize the UI of SW-Update Popup\n\nThe default sw-update popup component provides a prop which gives you the ability to fully control the appearance of the popup.\n\nFirst, you need to create a global component (e.g. `MySWUpdatePopup`) at `.mdpress/components`. A simple component created based on the default component is as follows:\n\n```jsx\n// .mdpress/components/MySWUpdatePopup.js\nimport React from 'react';\nimport SWUpdatePopup from '@mdpress/plugin-pwa/lib/SWUpdatePopup.js';\nimport './popup.styl';\n\nexport default function MySWUpdatePopup() {\n  return <SWUpdatePopup render={(enabled, reload, message, buttonText) => {\n    return enabled && <div\n      className=\"my-sw-update-popup\">\n      { message }\n      <br/>\n      <button onClick=\"reload\">{ buttonText }</button>\n    </div>;\n  }}/>;\n}\n```\n\n```stylus\n// .mdpress/components/popup.styl\n.my-sw-update-popup {\n  text-align: right;\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: #fff;\n  font-size: 20px;\n  padding: 10px;\n  border: 5px solid #3eaf7c;\n}\n\n.my-sw-update-popup button {\n  border: 1px solid #fefefe;\n}\n```\n\nThen, update your plugin config:\n\n``` diff\nmodule.exports = {\n   plugins: {\n    '@mdpress/pwa': {\n       serviceWorker: true,\n+      popupComponent: 'MySWUpdatePopup',\n       updatePopup: true\n     }\n  }\n}\n```\n\n**Also see:**\n\n- [MdPress > Using Components](../../guide/using-react.md#using-components)\n"}))};var o=l(t(0)),a=l(t(608));function l(e){return e&&e.__esModule?e:{default:e}}},604:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){return l.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},l.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),l.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var o,a=t(0),l=(o=a)&&o.__esModule?o:{default:o};t(606)},605:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){var n=(0,a.default)().$page,t=e.pageKey,s=void 0===t?n.key:t,u=e.className,i=e.slotKey,p=void 0===i?"default":i;(0,r.setGlobalInfo)("pageKey",s);var d=l.default[s]||function(){return null};return o.default.createElement(d,{className:u,slotKey:p})};var o=s(t(0)),a=s(t(99)),l=s(t(164)),r=t(36);function s(e){return e&&e.__esModule?e:{default:e}}t(607)},606:function(e,n,t){},607:function(e,n,t){},608:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=b(t(100)),a=b(t(29)),l=b(t(166)),r=t(0),s=b(r),u=b(t(4)),i=t(101),p=b(t(99)),d=b(t(102)),c=t(165),f=b(t(609)),m=b(t(605)),h=b(t(604)),g=b(t(37));function b(e){return e&&e.__esModule?e:{default:e}}var v="server"===(0,t(36).getEnv)();function w(e){var n=e.markDownString,t=e.className,u=e.slotKey,b=(0,r.useRef)(e.md||g.default.createMD()).current,w=(0,p.default)(),P=w.$site,k=w.$page,S=(0,r.useState)(null),x=(0,a.default)(S,2),C=x[0],_=x[1],M=(0,r.useRef)(null);return(0,r.useEffect)((function(){_(document.getElementById(u))}),[]),(0,r.useEffect)((function(){"default"!==u&&M&&C&&((0,o.default)(C.childNodes).forEach((function(e,n){var t=M.current.childNodes[n];t?M.current.replaceChild(e,t):M.current.appendChild(e)})),C.parentNode.removeChild(C))}),[C]),"default"!==u?s.default.createElement("div",{ref:M}):((0,c.useComponentWillMount)((function(){!function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};e.use((function(e){return(0,i.SupportReactComponent)(e,{allowErrorLog:!0,sandbox:(0,l.default)({},n,t),babelInit:function(e){e.availablePlugins.filterXSS&&(e.availablePlugins.filterXSS=function(){return{}})}})}))}(b,d.default,{$site:P,$page:k,JSON:JSON,ClientOnly:f.default,console:console,Content:m.default,OutboundLink:h.default,$withBase:function(e){var n=P.base;return"/"===e.charAt(0)?n+e.slice(1):e}})})),v?s.default.createElement(y,{html:b.render(n),slotKey:u,className:t}):(0,r.useMemo)((function(){var e=b.render(n);return s.default.createElement(y,{html:e,slotKey:u,className:t})}),[n,u,t]))}function y(e){var n=e.html,t=e.slotKey,o=e.className;return s.default.createElement("div",{className:"content content__"+t+" "+o,dangerouslySetInnerHTML:{__html:n}})}w.propTypes={markDownString:u.default.string,className:u.default.string,scrollAnchor:u.default.bool,mdInit:u.default.func,md:u.default.object},w.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},n.default=w},609:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(29));n.default=function(e){var n=(0,a.useState)(!1),t=(0,o.default)(n,2),r=t[0],u=t[1],i=e.children,p=e.onSSR,d=void 0===p?l.default.createElement(s,null):p;return(0,a.useEffect)((function(){u(!0)}),[]),r?i:d};var a=t(0),l=r(a);function r(e){return e&&e.__esModule?e:{default:e}}var s=function(){return l.default.createElement("span",null)}}}]);