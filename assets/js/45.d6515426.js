(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{553:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.className,n=void 0===t?"":t,s=e.slotKey;return o.default.createElement(o.default.Fragment,null,o.default.createElement(a.default,{slotKey:s,className:n,markDownString:'# Writing a theme\n\nTo write a theme, create a `.mdpress/theme` directory in your docs root, and then create a `Layout.js` file:\n\n::: file\n.\n└─ .mdpress\n   └─ `theme`\n       └─ Layout.js\n:::\n\nFrom there it’s the same as developing a normal React application. It’s entirely up to you how to organize your theme.\n\n## Content Outlet\n\nThe compiled content of the current `.md` file being rendered will be available as a special `<Content/>` global component. You will need to render it somewhere in your layout to display the content of the page. The simplest theme can be a single `Layout.js` component with the following content:\n\n``` html\n<template>\n  <div class="theme-container">\n    <Content/>\n  </div>\n</template>\n```\n\n**Also see:**\n\n- [Markdown Slot](../guide/markdown-slot.md)\n\n## Directory Structure\n\nOne `Layout.js` might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the [palette](../config/README.md#palette-styl), and even apply some plugins.\n\nSo it’s time to reorganize your theme, an agreed theme directory structure is as follows:\n\n::: file\ntheme\n├── `sandbox`\n│   └── xxx.js\n├── `components`\n│   └── xxx.js\n├── `layouts`\n│   ├── Layout.js_(**Mandatory**)_\n│   └── 404.js\n├── `styles`\n│   ├── index.styl\n│   └── palette.styl\n├── `templates`\n│   ├── dev.html\n│   └── ssr.html\n├── `index.js`\n├── `enhanceApp.js`\n└── package.json\n:::\n\n- `theme/sandbox`: The components in this directory will be automatically registered as sandbox components for Markdown.\n- `theme/components`: Your components.\n- `theme/layouts`: Layout components of the theme, where `Layout.js` is required.\n- `theme/styles`: Global style and palette.\n- `theme/templates`: Edit default template.\n- `theme/index.js`: Entry file of theme configuration.\n- `theme/enhanceApp.js`: Theme level enhancements.\n\n::: warning Note\nWhen you publish your theme as an npm package, if you don’t have any theme configuration, that means you don’t have `theme/index.js`, you’ll need to set the `"main"` field  to `layouts/Layout.js` in `package.json`, only in this way MdPress can properly resolve the theme.\n```json\n{\n  ...\n  "main": "layouts/Layout.js",\n  ...\n}\n```\n\n:::\n\n## Layout Component\n\nSuppose your theme layouts folder is as follows:\n\n::: file\ntheme\n└── `layouts`\n    ├── Layout.js\n    ├── AnotherLayout.js\n    └── 404.js\n:::\n\nThen, all the pages will use `Layout.js` as layout component by default, while the routes not matching will use `404.js`.\n\nTo switch the layout of some pages to `AnotherLayout.js`, all you have to do is update the frontmatter of this page:\n\n```markdown\n---\nlayout: AnotherLayout\n---\n````\n\n::: tip\nEach layout component may render distinct pages. To apply some global UI (for example global header), consider using [globalLayout](./option-api.md#globallayout)。\n:::\n\n## Apply plugins\n\nYou can apply some plugins to the theme via `theme/index.js`.\n\n```js\nmodule.exports = {\n  plugins: [\n    [\'@mdpress/pwa\', {\n      serviceWorker: true,\n      updatePopup: true\n    }]\n  ]\n}\n```\n\n## Site and Page Metadata\n\nThe `Layout` component will be invoked once for every `.md` file in `docs`, and the metadata for the entire site and that specific page will be exposed respectively as `$site` and `$page` properties which are injected into every sandbox component in the app.\n\nThis is the value of `$site` of this website:\n\n``` json\n{\n  "title": "MdPress",\n  "description": "Markdown-powered Static Site Generator",\n  "base": "/",\n  "pages": [\n    {\n      "lastUpdated": 1524027677000,\n      "path": "/",\n      "title": "MdPress",\n      "frontmatter": {}\n    },\n    ...\n  ]\n}\n```\n\n`title`, `description` and `base` are copied from respective fields in `.mdpress/config.js`. `pages` contains an array of metadata objects for each page, including its path, page title (explicitly specified in [YAML frontmatter](../guide/markdown.md#front-matter) or inferred from the first header on the page), and any YAML frontmatter data in that file.\n\nThis is the `$page` object for this page you are looking at:\n\n``` json\n{\n  "lastUpdated": 1524847549000,\n  "path": "/guide/custom-themes.html",\n  "title": "Custom Themes",\n  "headers": [/* ... */],\n  "frontmatter": {}\n}\n```\n\nIf the user provided `themeConfig` in `.mdpress/config.js`, it will also be available as `$site.themeConfig`. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with `$site.pages` to dynamically construct navigation links.\n\n::: tip\n  `lastUpdated` is the UNIX timestamp of this file’s last git commit, for more details, check out [Last Updated](../theme/default-theme-config.md#last-updated).\n:::\n\n## Content Excerpt\n\nIf a Markdown file contains a `\x3c!-- more --\x3e` comment, any content above the comment will be extracted and exposed as `$page.excerpt`. If you are building custom theme for blogging, this data can be used to render a post list with excerpts.\n\n## App Level Enhancements\n\nThemes can enhance the React app that MdPress uses by exposing an `enhanceApp.js` file at the root of the theme. The file should `export default` a hook function which will receive an object containing some app-level values. You can use this hook to install extra React Component, register global components, or modify router:\n\n``` js\n// async function is also supported, too\nexport default ({\n  sandbox, // the sandbox of React component being used in the MdPress app\n  routes, // the router option for the app\n  siteData, // site metadata\n  isServer, // is this enhancement applied in server-rendering or client\n  mdConfig, // the markdown extra config for the app\n  hooks, // some hooks for the root instance\n}) => {\n  // ...apply enhancements to the app\n}\n'}))};var o=s(n(0)),a=s(n(608));function s(e){return e&&e.__esModule?e:{default:e}}},604:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){return s.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},s.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),s.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var o,a=n(0),s=(o=a)&&o.__esModule?o:{default:o};n(606)},605:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=(0,a.default)().$page,n=e.pageKey,r=void 0===n?t.key:n,i=e.className,u=e.slotKey,d=void 0===u?"default":u;(0,l.setGlobalInfo)("pageKey",r);var c=s.default[r]||function(){return null};return o.default.createElement(c,{className:i,slotKey:d})};var o=r(n(0)),a=r(n(99)),s=r(n(164)),l=n(36);function r(e){return e&&e.__esModule?e:{default:e}}n(607)},606:function(e,t,n){},607:function(e,t,n){},608:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=g(n(100)),a=g(n(29)),s=g(n(166)),l=n(0),r=g(l),i=g(n(4)),u=n(101),d=g(n(99)),c=g(n(102)),m=n(165),p=g(n(609)),h=g(n(605)),f=g(n(604)),y=g(n(37));function g(e){return e&&e.__esModule?e:{default:e}}var v="server"===(0,n(36).getEnv)();function w(e){var t=e.markDownString,n=e.className,i=e.slotKey,g=(0,l.useRef)(e.md||y.default.createMD()).current,w=(0,d.default)(),j=w.$site,x=w.$page,M=(0,l.useState)(null),k=(0,a.default)(M,2),E=k[0],_=k[1],L=(0,l.useRef)(null);return(0,l.useEffect)((function(){_(document.getElementById(i))}),[]),(0,l.useEffect)((function(){"default"!==i&&L&&E&&((0,o.default)(E.childNodes).forEach((function(e,t){var n=L.current.childNodes[t];n?L.current.replaceChild(e,n):L.current.appendChild(e)})),E.parentNode.removeChild(E))}),[E]),"default"!==i?r.default.createElement("div",{ref:L}):((0,m.useComponentWillMount)((function(){!function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};e.use((function(e){return(0,u.SupportReactComponent)(e,{allowErrorLog:!0,sandbox:(0,s.default)({},t,n),babelInit:function(e){e.availablePlugins.filterXSS&&(e.availablePlugins.filterXSS=function(){return{}})}})}))}(g,c.default,{$site:j,$page:x,JSON:JSON,ClientOnly:p.default,console:console,Content:h.default,OutboundLink:f.default,$withBase:function(e){var t=j.base;return"/"===e.charAt(0)?t+e.slice(1):e}})})),v?r.default.createElement(b,{html:g.render(t),slotKey:i,className:n}):(0,l.useMemo)((function(){var e=g.render(t);return r.default.createElement(b,{html:e,slotKey:i,className:n})}),[t,i,n]))}function b(e){var t=e.html,n=e.slotKey,o=e.className;return r.default.createElement("div",{className:"content content__"+n+" "+o,dangerouslySetInnerHTML:{__html:t}})}w.propTypes={markDownString:i.default.string,className:i.default.string,scrollAnchor:i.default.bool,mdInit:i.default.func,md:i.default.object},w.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},t.default=w},609:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=l(n(29));t.default=function(e){var t=(0,a.useState)(!1),n=(0,o.default)(t,2),l=n[0],i=n[1],u=e.children,d=e.onSSR,c=void 0===d?s.default.createElement(r,null):d;return(0,a.useEffect)((function(){i(!0)}),[]),l?u:c};var a=n(0),s=l(a);function l(e){return e&&e.__esModule?e:{default:e}}var r=function(){return s.default.createElement("span",null)}}}]);