(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{588:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){var n=e.className,t=void 0===n?"":n,l=e.slotKey;return a.default.createElement(a.default.Fragment,null,a.default.createElement(o.default,{slotKey:l,className:t,markDownString:"# 主题的继承 <Badge type=\"warning\" text=\"beta\" />\n\n## 概念\n\n为了介绍本节，我们先几个基本概念：\n\n- **原子主题**：即父主题，类似默认主题这种完全从头实现的主题。\n- **派生主题**：即子主题，基于父主题创建的主题；\n\n::: tip 提示\n主题继承暂时不支持高阶继承，也就是说，一个派生主题无法被继承。\n:::\n\n## 使用\n\n假设你想创建一个继承自 MdPress 默认主题的派生主题，你只需要在你的主题配置中配置 [extend](./option-api.md#extend) 选项：\n\n```js\n// themePath/index.js\nmodule.exports = {\n  extend: '@mdpress/theme-default'\n}\n```\n\n## 继承策略\n\n父主题的所有能力都会\"传递\"给子主题，对于文件级别的约定，子主题可以通过在同样的位置创建同名文件来覆盖它；对于某些主题配置选项，如 [globalLayout](./option-api.md#globallayout)，子主题也可以通过同名配置来覆盖它。\n\n[文件级别的约定](./writing-a-theme.md#目录结构)如下：\n\n- **沙箱组件**，即放置在 `theme/sandbox` 中的 React 组件。\n- **组件**，即放置在 `theme/components` 中的 React 组件。\n- **全局的样式和调色板**，即放置在 `theme/styles` 中的 `index.styl` 和 `palette.styl`。\n- **HTML 模板**，即放置在 `theme/templates` 中的 `dev.html` 和 `ssr.html`。\n- **主题水平的客户端增强文件**，即 `theme/enhanceApp.js`\n\n对于主题配置，能被子主题覆盖的配置选项如下：\n\n- [devTemplate](./option-api.md#devtemplate)\n- [ssrTemplate](./option-api.md#ssrtemplate)\n- [globalLayout](./option-api.md#globallayout)\n\n无法被子主题覆盖的主题配置选项如下：\n\n- [extend](./option-api.md#extend)\n\n需要特殊处理的主题选项：\n\n- [plugins](./option-api.md#plugins)：参见 [插件的覆盖](#插件的覆盖)。\n\n## 插件的覆盖\n\n对于父主题中的 [plugins](./option-api.md#plugins), 子主题不会直接覆盖它，但是插件的选项可以通过创建同名的插件配置来覆盖。\n\n举例来说，如果父主题具有如下配置：\n\n```js\n// parentThemePath/index.js\nmodule.exports = {\n  plugins: [\n    ['@mdpress/search', {\n      searchMaxSuggestions: 5\n    }]\n  ]\n}\n```\n\n那么子主题可以通过如下方式来修改该插件的默认值：\n\n```js\n// themePath/index.js\nmodule.exports = {\n  plugins: [\n    ['@mdpress/search', {\n      searchMaxSuggestions: 10\n    }]\n  ]\n}\n```\n\n也可以选择禁用它：\n\n```js\n// themePath/index.js\nmodule.exports = {\n  plugins: [\n    ['@mdpress/search', false]\n  ]\n}\n```\n\n::: warning\n一般情况下，你都不需要这样做，除非你明确知道禁用父主题中的插件不会带来问题。\n:::\n\n## 组件的覆盖\n\n你可能想要在子主题中覆盖父主题中的同名组件，默认情况下，当父主题中的组件都使用相对路径引用其他组件时，你将不可能做到这一点，因为你无法在运行时修改父主题的代码。\n\nMdPress 则通过一种巧妙的方式实现了这种需求，但这对父主题有一定的要求——**所有的组件都必须使用 `@theme` 别名来引用其他组件**。\n\n举例来说，如果你正在开发的一个原子主题的结构如下：\n\n::: file\ntheme\n├── components\n│   ├── `Home.js`\n│   ├── `Navbar.js`\n│   └── `Sidebar.js`\n├── layouts\n│   ├── `404.js`\n│   └── `Layout.js`\n├── package.json\n└── index.js\n:::\n\n那么，在该主题中的任意 React 组件中，**你都应该通过 `@theme` 来访问主题根目录**：\n\n```jsx\nimport Navbar from '@theme/components/Navbar.js'\n// ...\n```\n\n在这样的前提下，当你在子主题中同样的位置创建一个 `Navbar` 组件时：\n\n::: file\ntheme\n└── components\n    └── `Navbar.js`\n:::\n\n`@theme/components/Navbar.js` 会自动地映射到子主题中的 Navbar 组件，当你移除这个组件时，`@theme/components/Navbar.js` 又会自动恢复为父主题中的 Navbar 组件。\n\n如此一来，就可以实现轻松地“篡改”一个原子主题的某个部分。\n\n::: tip\n1. 组件的覆盖，最好直接基于父主题中对应组件的代码来修改；\n2. 目前，在本地开发子主题，每次创建或移除组件时，你需要手动重启 Dev Server。\n:::\n\n## 访问父主题\n\n你可以使用 `@parent-theme` 来访问父主题的根路径，下述示例展示了在子主题中创建一个同名的布局组件。\n\n```jsx\n// themePath/components/Foo.js\nimport ParentLayout from '@parent-theme/layouts/Layout.js'\nimport Foo from '@theme/components/Foo.js'\n\nexport default function Layout(){\n  return <ParentLayout>\n             <Foo/>\n         </ParentLayout>\n}\n```\n\n\n\n\n\n"}))};var a=l(t(0)),o=l(t(608));function l(e){return e&&e.__esModule?e:{default:e}}},604:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){return l.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},l.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),l.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var a,o=t(0),l=(a=o)&&a.__esModule?a:{default:a};t(606)},605:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){var n=(0,o.default)().$page,t=e.pageKey,u=void 0===t?n.key:t,s=e.className,d=e.slotKey,i=void 0===d?"default":d;(0,r.setGlobalInfo)("pageKey",u);var c=l.default[u]||function(){return null};return a.default.createElement(c,{className:s,slotKey:i})};var a=u(t(0)),o=u(t(99)),l=u(t(164)),r=t(36);function u(e){return e&&e.__esModule?e:{default:e}}t(607)},606:function(e,n,t){},607:function(e,n,t){},608:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=g(t(100)),o=g(t(29)),l=g(t(166)),r=t(0),u=g(r),s=g(t(4)),d=t(101),i=g(t(99)),c=g(t(102)),f=t(165),m=g(t(609)),p=g(t(605)),h=g(t(604)),v=g(t(37));function g(e){return e&&e.__esModule?e:{default:e}}var y="server"===(0,t(36).getEnv)();function b(e){var n=e.markDownString,t=e.className,s=e.slotKey,g=(0,r.useRef)(e.md||v.default.createMD()).current,b=(0,i.default)(),x=b.$site,N=b.$page,_=(0,r.useState)(null),w=(0,o.default)(_,2),M=w[0],S=w[1],E=(0,r.useRef)(null);return(0,r.useEffect)((function(){S(document.getElementById(s))}),[]),(0,r.useEffect)((function(){"default"!==s&&E&&M&&((0,a.default)(M.childNodes).forEach((function(e,n){var t=E.current.childNodes[n];t?E.current.replaceChild(e,t):E.current.appendChild(e)})),M.parentNode.removeChild(M))}),[M]),"default"!==s?u.default.createElement("div",{ref:E}):((0,f.useComponentWillMount)((function(){!function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};e.use((function(e){return(0,d.SupportReactComponent)(e,{allowErrorLog:!0,sandbox:(0,l.default)({},n,t),babelInit:function(e){e.availablePlugins.filterXSS&&(e.availablePlugins.filterXSS=function(){return{}})}})}))}(g,c.default,{$site:x,$page:N,JSON:JSON,ClientOnly:m.default,console:console,Content:p.default,OutboundLink:h.default,$withBase:function(e){var n=x.base;return"/"===e.charAt(0)?n+e.slice(1):e}})})),y?u.default.createElement(j,{html:g.render(n),slotKey:s,className:t}):(0,r.useMemo)((function(){var e=g.render(n);return u.default.createElement(j,{html:e,slotKey:s,className:t})}),[n,s,t]))}function j(e){var n=e.html,t=e.slotKey,a=e.className;return u.default.createElement("div",{className:"content content__"+t+" "+a,dangerouslySetInnerHTML:{__html:n}})}b.propTypes={markDownString:s.default.string,className:s.default.string,scrollAnchor:s.default.bool,mdInit:s.default.func,md:s.default.object},b.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},n.default=b},609:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=r(t(29));n.default=function(e){var n=(0,o.useState)(!1),t=(0,a.default)(n,2),r=t[0],s=t[1],d=e.children,i=e.onSSR,c=void 0===i?l.default.createElement(u,null):i;return(0,o.useEffect)((function(){s(!0)}),[]),r?d:c};var o=t(0),l=r(o);function r(e){return e&&e.__esModule?e:{default:e}}var u=function(){return l.default.createElement("span",null)}}}]);