(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{551:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.className,n=void 0===t?"":t,l=e.slotKey;return o.default.createElement(o.default.Fragment,null,o.default.createElement(a.default,{slotKey:l,className:n,markDownString:"\n# Theme Configuration\n\nAs with plugins, the theme configuration file `themeEntry` should export a `plain JavaScript object`(`#1`). If the plugin needs to take options, it can be a function that exports a plain object(`#2`). The function will be called with the `siteConfig.themeConfig` as the first argument, along with [ctx](../plugin/context-api.md) which provides some compile-time metadata.\n\n``` js\n// #1\nmodule.exports = {\n   // ...\n}\n```\n\n``` js\n// #2\nmodule.exports = (themeConfig, ctx) => {\n   return {\n      // ...\n   }\n}\n```\n\n\n::: tip\n1. You should see the difference between `themeEntry` and `themeConfig`, the former is a configuration for the theme itself, provided by MdPress. The latter is the user’s configuration for the theme, implemented by the used theme, for example [Default Theme Config](./default-theme-config.md).\n\n2. Along with the options listed in this section, `themeEntry` also supports all [Option API](../plugin/option-api.md) and [Lifecycle](../plugin/life-cycle.md) supported by plugins.\n:::\n\n## plugins\n\n- Type: `Array|Object`\n- Default: undefined\n\n**Also see:**\n\n- [Plugin > Using a Plugin](../plugin/using-a-plugin.md).\n\n---\n\n::: warning\nYou probably don’t need to use following options tagged with <Badge text=\"Danger Zone\" vertical=\"middle\"/> unless you know what you are doing!\n:::\n\n## devTemplate <Badge text=\"Danger Zone\"/>\n\n- Type: `String`\n- Default: undefined\n\nHTML template path used in `dev` mode, default template see [here](https://github.com/docschina/mdpress/tree/master/packages/@mdpress/core/lib/client/index.dev.html)\n\n## ssrTemplate <Badge text=\"Danger Zone\"/>\n\n- Type: `String`\n- Default: undefined\n\nHTML template path used in `build` mode, default template see [here](https://github.com/docschina/mdpress/tree/master/packages/@mdpress/core/lib/client/index.ssr.html)\n\n## extend <Badge text=\"Danger Zone\"/>\n\n- Type: `String`\n- Default: undefined\n\n```js\nmodule.exports = {\n  extend: '@mdpress/theme-default'\n}\n```\n\nMdPress provides the ability to inherit one theme from another. MdPress will follow the concept of `override` and automatically help you prioritize thematic attributes, for example styles and layout components.\n\n**Also see:**\n\n- [Theme Inheritance](./inheritance.md)\n- [Design Concepts of MdPress 1.x](../miscellaneous/design-concepts.md)\n\n## globalLayout <Badge text=\"Danger Zone\"/>\n\n- Type: `String`\n- Default: undefined\n\n```js\n// themePath/index.js\nmodule.exports = {\n  globalLayout: '/path/to/your/global/layout'\n}\n```\n\nGlobal layout component is a component responsible for the global layout strategy. The [default global layout](https://github.com/docschina/mdpress/tree/master/packages/@mdpress/core/lib/client/components/GlobalLayout.js) will help you render different layouts according to [$frontmatter.layout](../guide/frontmatter.md#layout), so in most cases you do not need to configure this option.\n\nFor example, when you want to set a global header and footer for your theme, you can do this:\n\n```jsx\n\x3c!-- themePath/layouts/GlobalLayout.js --\x3e\nimport React from 'react';\nimport store from '@app/store';\nimport useData from '@app/hooks/data';\nimport useUpdateMeta from '@app/hooks/updateMeta';\nimport { getLayoutAsyncComponent } from '@app/util';\n\nexport default function GlobalLayout(props) {\n  const { $page } = useData();\n  useUpdateMeta(props);\n\n  const getLayout = ()  => {\n    if ($page && $page.path) {\n      const layout = $page.frontmatter.layout;\n      if (layout && (store.getLayoutAsyncComponent(layout)\n          || store.getSyncComponent(layout))) {\n        return layout;\n      }\n      return 'Layout';\n    }\n    return 'NotFound';\n  };\n\n  const layout = getLayout();\n  const Comp = getLayoutAsyncComponent(layout) || (() => <div>Error!</div>);\n  return <div>\n    <header><h1>Header</h1></header>\n    <Comp/>\n    <footer><h1>Footer</h1></footer>\n  </div>;\n}\n```\n"}))};var o=l(n(0)),a=l(n(608));function l(e){return e&&e.__esModule?e:{default:e}}},604:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){return l.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},l.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),l.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var o,a=n(0),l=(o=a)&&o.__esModule?o:{default:o};n(606)},605:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=(0,a.default)().$page,n=e.pageKey,u=void 0===n?t.key:n,i=e.className,s=e.slotKey,d=void 0===s?"default":s;(0,r.setGlobalInfo)("pageKey",u);var c=l.default[u]||function(){return null};return o.default.createElement(c,{className:i,slotKey:d})};var o=u(n(0)),a=u(n(99)),l=u(n(164)),r=n(36);function u(e){return e&&e.__esModule?e:{default:e}}n(607)},606:function(e,t,n){},607:function(e,t,n){},608:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=y(n(100)),a=y(n(29)),l=y(n(166)),r=n(0),u=y(r),i=y(n(4)),s=n(101),d=y(n(99)),c=y(n(102)),f=n(165),p=y(n(609)),m=y(n(605)),h=y(n(604)),g=y(n(37));function y(e){return e&&e.__esModule?e:{default:e}}var v="server"===(0,n(36).getEnv)();function b(e){var t=e.markDownString,n=e.className,i=e.slotKey,y=(0,r.useRef)(e.md||g.default.createMD()).current,b=(0,d.default)(),x=b.$site,M=b.$page,_=(0,r.useState)(null),C=(0,a.default)(_,2),E=C[0],S=C[1],D=(0,r.useRef)(null);return(0,r.useEffect)((function(){S(document.getElementById(i))}),[]),(0,r.useEffect)((function(){"default"!==i&&D&&E&&((0,o.default)(E.childNodes).forEach((function(e,t){var n=D.current.childNodes[t];n?D.current.replaceChild(e,n):D.current.appendChild(e)})),E.parentNode.removeChild(E))}),[E]),"default"!==i?u.default.createElement("div",{ref:D}):((0,f.useComponentWillMount)((function(){!function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};e.use((function(e){return(0,s.SupportReactComponent)(e,{allowErrorLog:!0,sandbox:(0,l.default)({},t,n),babelInit:function(e){e.availablePlugins.filterXSS&&(e.availablePlugins.filterXSS=function(){return{}})}})}))}(y,c.default,{$site:x,$page:M,JSON:JSON,ClientOnly:p.default,console:console,Content:m.default,OutboundLink:h.default,$withBase:function(e){var t=x.base;return"/"===e.charAt(0)?t+e.slice(1):e}})})),v?u.default.createElement(w,{html:y.render(t),slotKey:i,className:n}):(0,r.useMemo)((function(){var e=y.render(t);return u.default.createElement(w,{html:e,slotKey:i,className:n})}),[t,i,n]))}function w(e){var t=e.html,n=e.slotKey,o=e.className;return u.default.createElement("div",{className:"content content__"+n+" "+o,dangerouslySetInnerHTML:{__html:t}})}b.propTypes={markDownString:i.default.string,className:i.default.string,scrollAnchor:i.default.bool,mdInit:i.default.func,md:i.default.object},b.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},t.default=b},609:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(29));t.default=function(e){var t=(0,a.useState)(!1),n=(0,o.default)(t,2),r=n[0],i=n[1],s=e.children,d=e.onSSR,c=void 0===d?l.default.createElement(u,null):d;return(0,a.useEffect)((function(){i(!0)}),[]),r?s:c};var a=n(0),l=r(a);function r(e){return e&&e.__esModule?e:{default:e}}var u=function(){return l.default.createElement("span",null)}}}]);