(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{597:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=n.className,t=void 0===e?"":e,r=n.slotKey;return a.default.createElement(a.default.Fragment,null,a.default.createElement(o.default,{slotKey:r,className:t,markDownString:"# 默认主题配置\n\n::: tip\n本页所列的选项仅对默认主题生效。如果你在使用一个自定义主题，选项可能会有不同。\n:::\n\n## 首页\n\n默认的主题提供了一个首页（Homepage）的布局 (用于 [这个网站的主页](../README.md))。想要使用它，需要在你的根级 `README.md` 的 [YAML front matter](../guide/markdown.md#front-matter) 指定 `home: true`。以下是一个如何使用的例子：\n\n``` yaml\n---\nhome: true\nheroImage: /hero.png\nheroText: Hero 标题\ntagline: Hero 副标题\nactionText: 快速上手 →\nactionLink: /zh/guide/\nfeatures:\n- title: 简洁至上\n  details: 以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。\n- title: Markdown 驱动\n  details: 享受 React + webpack 的开发体验，在 Markdown 中使用 React 组件，同时可以使用 React 来开发自定义主题。\n- title: 高性能\n  details: MdPress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。\nfooter: MIT Licensed | Copyright © 2020-present docschina\n---\n```\n\n你可以将相应的内容设置为 `null` 来禁用标题和副标题。\n\n任何 `YAML front matter` 之后额外的内容将会以普通的 markdown 被渲染，并插入到 `features` 的后面。\n\n## 导航栏\n\n导航栏可能包含你的页面标题、[搜索框](#搜索框)、 [导航栏链接](#导航栏链接)、[多语言切换](../guide/i18n.md)、[仓库链接](#git-仓库和编辑链接)，它们均取决于你的配置。\n\n### 导航栏 Logo\n\n你可以通过 `themeConfig.logo` 增加导航栏 Logo ，Logo 可以被放置在[公共文件目录](../guide/assets.md#public-files)：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    logo: '/assets/img/logo.png',\n  }\n}\n```\n\n### 导航栏链接\n\n你可以通过 `themeConfig.nav` 增加一些导航栏链接:\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    nav: [\n      { text: 'Home', link: '/' },\n      { text: 'Guide', link: '/guide/' },\n      { text: 'External', link: 'https://google.com' },\n    ]\n  }\n}\n\n\n```\n外部链接 `<a>` 标签的特性将默认包含`target=\"_blank\" rel=\"noopener noreferrer\"`，你可以提供 `target` 与 `rel`，它们将被作为特性被增加到 `<a>` 标签上：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    nav: [\n      { text: 'External', link: 'https://google.com', target:'_self', rel:'' },\n      { text: 'Guide', link: '/guide/', target:'_blank' }\n    ]\n  }\n}\n```\n\n当你提供了一个 `items` 数组而不是一个单一的 `link` 时，它将显示为一个 `下拉列表` ：\n\n```js\nmodule.exports = {\n  themeConfig: {\n    nav: [\n      {\n        text: 'Languages',\n        ariaLabel: 'Language Menu',\n        items: [\n          { text: 'Chinese', link: '/language/chinese/' },\n          { text: 'Japanese', link: '/language/japanese/' }\n        ]\n      }\n    ]\n  }\n}\n```\n\n此外，你还可以通过嵌套的 `items` 来在 `下拉列表` 中设置分组：\n\n```js\nmodule.exports = {\n  themeConfig: {\n    nav: [\n      {\n        text: 'Languages',\n        items: [\n          { text: 'Group1', items: [/*  */] },\n          { text: 'Group2', items: [/*  */] }\n        ]\n      }\n    ]\n  }\n}\n```\n\n### 禁用导航栏\n\n你可以使用 `themeConfig.navbar` 来禁用所有页面的导航栏：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    navbar: false\n  }\n}\n```\n\n你也可以通过 `YAML front matter` 来禁用某个指定页面的导航栏：\n\n``` yaml\n---\nnavbar: false\n---\n```\n\n## 侧边栏\n\n想要使 侧边栏（Sidebar）生效，需要配置 `themeConfig.sidebar`，基本的配置，需要一个包含了多个链接的数组：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    sidebar: [\n      '/',\n      '/page-a',\n      ['/page-b', 'Explicit link text']\n    ]\n  }\n}\n```\n\n你可以省略 `.md` 拓展名，同时以 `/` 结尾的路径将会被视为 `*/README.md`，这个链接的文字将会被自动获取到（无论你是声明为页面的第一个 header，还是明确地在 `YAML front matter` 中指定页面的标题）。如果你想要显示地指定链接的文字，使用一个格式为 `[link, text]` 的数组。\n\n### 嵌套的标题链接\n\n默认情况下，侧边栏会自动地显示由当前页面的标题（headers）组成的链接，并按照页面本身的结构进行嵌套，你可以通过 `themeConfig.sidebarDepth` 来修改它的行为。默认的深度是 `1`，它将提取到 `h2` 的标题，设置成 `0` 将会禁用标题（headers）链接，同时，最大的深度为 `2`，它将同时提取 `h2` 和 `h3` 标题。\n\n也可以使用 `YAML front matter` 来为某个页面重写此值：\n\n``` md\n---\nsidebarDepth: 2\n---\n```\n\n### 显示所有页面的标题链接\n\n默认情况下，侧边栏只会显示由当前活动页面的标题（headers）组成的链接，你可以将 `themeConfig.displayAllHeaders` 设置为 `true` 来显示所有页面的标题链接：\n\n``` js\nmodule.exports = {\n  themeConfig: {\n    displayAllHeaders: true // 默认值：false\n  }\n}\n```\n\n### 活动的标题链接\n\n默认情况下，当用户通过滚动查看页面的不同部分时，嵌套的标题链接和 URL 中的 Hash 值会实时更新，这个行为可以通过以下的配置来禁用：\n\n``` js\nmodule.exports = {\n  themeConfig: {\n    activeHeaderLinks: false, // 默认值：true\n  }\n}\n```\n\n::: tip\n值得一提的是，当你禁用此选项时，此功能的相应脚本将不会被加载，这是我们性能优化的一个小点。\n:::\n\n\n### 侧边栏分组\n\n你可以通过使用**对象**来将侧边栏划分成多个组：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    sidebar: [\n      {\n        title: 'Group 1',   // 必要的\n        path: '/foo/',      // 可选的, 标题的跳转链接，应为绝对路径且必须存在\n        collapsable: false, // 可选的, 默认值是 true,\n        sidebarDepth: 1,    // 可选的, 默认值是 1\n        children: [\n          '/'\n        ]\n      },\n      {\n        title: 'Group 2',\n        children: [ /* ... */ ]\n      }\n    ]\n  }\n}\n```\n\n侧边栏的每个子组默认是可折叠的，你可以设置 `collapsable: false` 来让一个组永远都是展开状态。\n\n一个侧边栏的子组配置同时支持 [sidebarDepth](#nested-header-links) 字段用于重写默认显示的侧边栏深度(`1`)。\n\n::: tip\n  嵌套的侧边栏分组也是支持的。\n:::\n\n### 多个侧边栏\n\n如果你想为不同的页面组来显示不同的侧边栏，首先，将你的页面文件组织成下述的目录结构：\n\n```\n.\n├─ README.md\n├─ contact.md\n├─ about.md\n├─ foo/\n│  ├─ README.md\n│  ├─ one.md\n│  └─ two.md\n└─ bar/\n   ├─ README.md\n   ├─ three.md\n   └─ four.md\n```\n\n接着，遵循以下的侧边栏配置：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    sidebar: {\n      '/foo/': [\n        '',     /* /foo/ */\n        'one',  /* /foo/one.html */\n        'two'   /* /foo/two.html */\n      ],\n\n      '/bar/': [\n        '',      /* /bar/ */\n        'three', /* /bar/three.html */\n        'four'   /* /bar/four.html */\n      ],\n\n      // fallback\n      '/': [\n        '',        /* / */\n        'contact', /* /contact.html */\n        'about'    /* /about.html */\n      ]\n    }\n  }\n}\n```\n\n::: warning\n确保 fallback 侧边栏被最后定义。MdPress 会按顺序遍历侧边栏配置来寻找匹配的配置。\n:::\n\n### 自动生成侧栏\n\n如果你希望自动生成一个仅仅包含了当前页面标题（headers）链接的侧边栏，你可以通过 `YAML front matter` 来实现：\n\n``` yaml\n---\nsidebar: auto\n---\n```\n\n你也可以通过配置来在所有页面中启用它：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    sidebar: 'auto'\n  }\n}\n```\n\n在 [多语言](../guide/i18n.md) 模式下, 你也可以将其应用到某一特定的语言下：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n     '/zh/': {\n       sidebar: 'auto'\n     }\n  }\n}\n```\n\n### 禁用侧边栏\n\n你可以通过 `YAML front matter` 来禁用指定页面的侧边栏：\n\n``` yaml\n---\nsidebar: false\n---\n```\n\n## 搜索框\n\n### 内置搜索\n\n你可以通过设置 `themeConfig.search: false` 来禁用默认的搜索框，或是通过 `themeConfig.searchMaxSuggestions` 来调整默认搜索框显示的搜索结果数量：\n\n``` js\nmodule.exports = {\n  themeConfig: {\n    search: false,\n    searchMaxSuggestions: 10\n  }\n}\n```\n\n你可以通过[在页面的 frontmatter 中设置 `tags`](../guide/frontmatter.md#tags) 来优化搜索结果：\n\n```yaml\n---\ntags: \n  - 配置\n  - 主题\n  - 索引\n---\n```\n\n你可以通过[在页面的 frontmatter 中设置 `search`](../guide/frontmatter.md#search) 来对单独的页面禁用内置的搜索框：\n\n```yaml\n---\nsearch: false\n---\n```\n\n::: tip\n内置搜索只会为页面的标题、`h2` 、 `h3` 以及 `tags` 构建搜索索引。\n如果你需要全文搜索，你可以使用 [Algolia 搜索](#algolia-搜索)。\n:::\n\n### Algolia 搜索\n\n你可以通过 `themeConfig.algolia` 选项来用 [Algolia 搜索](https://community.algolia.com/docsearch/) 替换内置的搜索框。要启用 Algolia 搜索，你需要至少提供 `apiKey` 和 `indexName`：\n\n```js\nmodule.exports = {\n  themeConfig: {\n    algolia: {\n      apiKey: '<API_KEY>',\n      indexName: '<INDEX_NAME>'\n    }\n  }\n}\n```\n\n::: warning 注意\n不同于开箱即用的 [内置搜索](#内置搜索)，[Algolia 搜索](https://community.algolia.com/docsearch/) 需要你在使用之前将你的网站提交给它们用于创建索引。\n:::\n\n更多选项请参考 [Algolia DocSearch 的文档](https://github.com/algolia/docsearch#docsearch-options)。\n\n## 最后更新时间\n\n你可以通过 `themeConfig.lastUpdated` 选项来获取每个文件最后一次 `git` 提交的 UNIX 时间戳(ms)，同时它将以合适的日期格式显示在每一页的底部：\n\n``` js\nmodule.exports = {\n  themeConfig: {\n    lastUpdated: 'Last Updated', // string | boolean\n  }\n}\n```\n\n请注意，`themeConfig.lastUpdated` 默认是关闭的，如果给定一个字符串，它将会作为前缀显示（默认值是：`Last Updated`）。\n\n::: warning 使用须知\n  由于 `lastUpdated` 是基于 `git` 的, 所以你只能在一个基于 `git` 的项目中启用它。此外，由于使用的时间戳来自 git commit，因此它将仅在给定页的第一次提交之后显示，并且仅在该页面后续提交更改时更新。\n:::\n\n**拓展阅读:**\n\n- [@mdpress/plugin-last-updated](../plugin/official/plugin-last-updated.md)\n\n## 上 / 下一篇链接\n\n上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。\n\n你可以通过 `themeConfig.nextLinks` 和 `themeConfig.prevLinks` 来全局禁用它们：\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    // 默认值是 true 。设置为 false 来禁用所有页面的 下一篇 链接\n    nextLinks: false,\n    // 默认值是 true 。设置为 false 来禁用所有页面的 上一篇 链接\n    prevLinks: false\n  }\n}\n```\n\n你也可以使用 `YAML front matter` 来明确地重写或者禁用它们：\n\n``` yaml\n---\nprev: ./some-other-page\nnext: false\n---\n```\n\n## Git 仓库和编辑链接\n\n当你提供了 `themeConfig.repo` 选项，将会自动在每个页面的导航栏生成生成一个 GitHub 链接，以及在页面的底部生成一个 `\"Edit this page\"` 链接。\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    // 假定是 GitHub. 同时也可以是一个完整的 GitLab URL\n    repo: 'docschina/mdpress',\n    // 自定义仓库链接文字。默认从 `themeConfig.repo` 中自动推断为\n    // \"GitHub\"/\"GitLab\"/\"Bitbucket\" 其中之一，或是 \"Source\"。\n    repoLabel: '查看源码',\n\n    // 以下为可选的编辑链接选项\n\n    // 假如你的文档仓库和项目本身不在一个仓库：\n    docsRepo: 'docschina/mdpress',\n    // 假如文档不是放在仓库的根目录下：\n    docsDir: 'docs',\n    // 假如文档放在一个特定的分支下：\n    docsBranch: 'master',\n    // 默认是 false, 设置为 true 来启用\n    editLinks: true,\n    // 默认为 \"Edit this page\"\n    editLinkText: '帮助我们改善此页面！'\n  }\n}\n```\n\n你可以通过 `YAML front matter` 来禁用指定页面的编辑链接：\n\n``` yaml\n---\neditLink: false\n---\n```\n\n## 页面滚动 <Badge text=\"1.2.0+\" />\n\n你可以通过 `themeConfig.smoothScroll` 选项来启用页面滚动效果。\n\n``` js\n// .mdpress/config.js\nmodule.exports = {\n  themeConfig: {\n    smoothScroll: true\n  }\n}\n```\n\n## 自定义页面类\n\n有时候你可能需要为特定页面添加一个 CSS 类名，以方便针对该页面添加一些专门的 CSS。这种情况下你可以在该页面的 YAML front matter 中声明一个 `pageClass`：\n\n``` yaml\n---\npageClass: custom-page-class\n---\n```\n\n然后你就可以写专门针对该页面的 CSS 了：\n\n``` css\n/* .mdpress/override.styl */\n\n.theme-container.custom-page-class {\n  /* 特定页面的 CSS */\n}\n```\n\n## 特定页面的自定义布局\n\n默认情况下，每个 `*.md` 文件将会被渲染在一个 `<div class=\"page\">` 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面（而只保留导航栏），你可以再次使用 `YAML front matter` 来指定这个组件。\n\n``` yaml\n---\nlayout: SpecialLayout\n---\n```\n\n这将会为当前的页面渲染 `.mdpress/components/SpecialLayout.js` 布局。\n"}))};var a=r(t(0)),o=r(t(608));function r(n){return n&&n.__esModule?n:{default:n}}},604:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){return r.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},r.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),r.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var a,o=t(0),r=(a=o)&&a.__esModule?a:{default:a};t(606)},605:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=(0,o.default)().$page,t=n.pageKey,l=void 0===t?e.key:t,i=n.className,d=n.slotKey,u=void 0===d?"default":d;(0,s.setGlobalInfo)("pageKey",l);var m=r.default[l]||function(){return null};return a.default.createElement(m,{className:i,slotKey:u})};var a=l(t(0)),o=l(t(99)),r=l(t(164)),s=t(36);function l(n){return n&&n.__esModule?n:{default:n}}t(607)},606:function(n,e,t){},607:function(n,e,t){},608:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=b(t(100)),o=b(t(29)),r=b(t(166)),s=t(0),l=b(s),i=b(t(4)),d=t(101),u=b(t(99)),m=b(t(102)),f=t(165),c=b(t(609)),g=b(t(605)),p=b(t(604)),h=b(t(37));function b(n){return n&&n.__esModule?n:{default:n}}var v="server"===(0,t(36).getEnv)();function C(n){var e=n.markDownString,t=n.className,i=n.slotKey,b=(0,s.useRef)(n.md||h.default.createMD()).current,C=(0,u.default)(),y=C.$site,M=C.$page,L=(0,s.useState)(null),j=(0,o.default)(L,2),k=j[0],E=j[1],S=(0,s.useRef)(null);return(0,s.useEffect)((function(){E(document.getElementById(i))}),[]),(0,s.useEffect)((function(){"default"!==i&&S&&k&&((0,a.default)(k.childNodes).forEach((function(n,e){var t=S.current.childNodes[e];t?S.current.replaceChild(n,t):S.current.appendChild(n)})),k.parentNode.removeChild(k))}),[k]),"default"!==i?l.default.createElement("div",{ref:S}):((0,f.useComponentWillMount)((function(){!function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};n.use((function(n){return(0,d.SupportReactComponent)(n,{allowErrorLog:!0,sandbox:(0,r.default)({},e,t),babelInit:function(n){n.availablePlugins.filterXSS&&(n.availablePlugins.filterXSS=function(){return{}})}})}))}(b,m.default,{$site:y,$page:M,JSON:JSON,ClientOnly:c.default,console:console,Content:g.default,OutboundLink:p.default,$withBase:function(n){var e=y.base;return"/"===n.charAt(0)?e+n.slice(1):n}})})),v?l.default.createElement(x,{html:b.render(e),slotKey:i,className:t}):(0,s.useMemo)((function(){var n=b.render(e);return l.default.createElement(x,{html:n,slotKey:i,className:t})}),[e,i,t]))}function x(n){var e=n.html,t=n.slotKey,a=n.className;return l.default.createElement("div",{className:"content content__"+t+" "+a,dangerouslySetInnerHTML:{__html:e}})}C.propTypes={markDownString:i.default.string,className:i.default.string,scrollAnchor:i.default.bool,mdInit:i.default.func,md:i.default.object},C.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},e.default=C},609:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=s(t(29));e.default=function(n){var e=(0,o.useState)(!1),t=(0,a.default)(e,2),s=t[0],i=t[1],d=n.children,u=n.onSSR,m=void 0===u?r.default.createElement(l,null):u;return(0,o.useEffect)((function(){i(!0)}),[]),s?d:m};var o=t(0),r=s(o);function s(n){return n&&n.__esModule?n:{default:n}}var l=function(){return r.default.createElement("span",null)}}}]);