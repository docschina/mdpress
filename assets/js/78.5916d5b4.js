(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{596:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=n.className,t=void 0===e?"":e,r=n.slotKey;return o.default.createElement(o.default.Fragment,null,o.default.createElement(a.default,{slotKey:r,className:t,markDownString:"\n# Option API\n\n## name\n\n- 类型: `string`\n- 默认值: undefined\n\n插件的名字。\n\n在内部，MdPress 将会使用插件的包名作为插件的名称。当你的插件是一个本地插件（即直接使用了一个纯函数）时，请确保设定了该选项，这对调试更有利。\n\n```js\n// .mdpress/config.js\nmodule.exports = {\n  plugins: [\n    [\n      (pluginOptions, context) => ({\n        name: 'my-xxx-plugin'\n        // ... the rest of options\n      })\n    ]\n  ]\n}\n```\n\n## plugins\n\n- 类型: `array`\n- 默认值: undefined\n\n一个插件可以像 preset 一样包含多个插件。\n\n```js\n// 一个插件\nmodule.exports = {\n  plugins: [\n    'tag',\n    'category'\n  ]\n}\n```\n\n## chainWebpack\n\n- 类型: `Function`\n- 默认值: undefined\n\n使用 [webpack-chain](https://github.com/mozilla-neutrino/webpack-chain) 来修改内部的 webpack 配置：\n\n```js\nmodule.exports = {\n  chainWebpack (config, isServer) {\n    // config 是一个 ChainableConfig 的实例\n  }\n}\n```\n\n::: tip 提示\n由于 MdPress 是一个基于 SSR 的应用，这里会有两个 webpack 配置，`isServer` 用于决定当前的 webpack 配置是应用到 server 还是 client。\n\n:::\n\n## define\n\n- 类型: `Object|Function`\n- 默认值: undefined\n\n由于通过 [chainWebpack](#chainwebpack) 使用 [DefinePlugin](https://webpack.js.org/plugins/define-plugin/) 会有点麻烦：\n\n```js\nmodule.exports = {\n  chainWebpack (config) {\n    config.plugin('injections').tap(([options]) => [\n      Object.assign(options, {\n        SW_BASE_URL: JSON.stringify('/')\n      })\n    ])\n  }\n}\n```\n\nMdPress 特别开辟了一个更简洁的 `define` 选项。值得注意的是这些值已自动地被 `JSON.stringify` 处理。\n\n- 对象式:\n\n```js\nmodule.exports = {\n  define: {\n    SW_BASE_URL: '/',\n  }\n}\n```\n\n- 函数式:\n\n```js\nmodule.exports = (options, context) => ({\n  define () {\n    return {\n      SW_BASE_URL: context.base || '/',\n      SW_ENABLED: !!options.enabled,\n    }\n  }\n})\n```\n\n## alias\n\n- 类型: `Object|Function`\n- 默认值: undefined\n\n我们可以通过 [chainWebpack](#chainwebpack) 来配置别名：\n\n```js\nmodule.exports = (options, context) => ({\n  chainWebpack (config) {\n    config.resolve.alias.set('@pwd', process.cwd())\n  }\n})\n```\n\n`alias` 可以使这个流程更像配置：\n\n```js\nmodule.exports = (options, context) => ({\n  alias: {\n    '@theme': context.themeAPI.themePath\n  }\n})\n```\n\n## beforeDevServer\n\n- 类型: `Function`\n- 默认值: undefined\n\n等同于 [webpack-dev-server](https://github.com/webpack/webpack-dev-server) 中的 [before](https://webpack.js.org/configuration/dev-server/#devserver-before) 选项，你可以使用它来自定义你的 devServer，如：\n\n```js\nmodule.exports = {\n  // ...\n  beforeDevServer(app, server) {\n    app.get('/path/to/your/custom', function(req, res) {\n      res.json({ custom: 'response' })\n    })\n  }\n}\n```\n\n## afterDevServer\n\n- 类型: `Function`\n- 默认值: undefined\n\n等同于 [webpack-dev-server](https://github.com/webpack/webpack-dev-server) 中的 [after](https://webpack.js.org/configuration/dev-server/#devserver-after)，你可以用其在所有中间件的最后去执行一些自定义的中间件：\n\n```js\nmodule.exports = {\n  // ...\n  afterDevServer(app, server) {\n    // hacking now ...\n  }\n}\n```\n\n## enhanceAppFiles\n\n- 类型: `String | Array | AsyncFunction`\n- 默认值: `undefined`\n\n此选项接受指向增强文件的绝对文件路径或返回该路径的函数，你可以通过此选项做一些[应用级别的配置](../guide/basic-config.md#应用级别的配置):\n\n``` js\nimport { resolve } from 'path'\n\nmodule.exports = {\n  enhanceAppFiles: resolve(__dirname, 'client.js')\n}\n```\n\n此选项还支持动态代码，允许你使用贴近编译上下文的能力来做更多的事：\n\n```js\nmodule.exports = (option, context) => {\n  return {\n    enhanceAppFiles() {\n      return {\n         name: 'dynamic-code',\n         content: `export default () => { }`\n       }\n    }\n  }\n}\n```\n\n## clientDynamicModules\n\n- 类型: `Function`\n- 默认值: `undefined`\n\n有时，你可能想要在编译期间生成一些在客户端使用的模块：\n\n```js\nmodule.exports = (options, context) => ({\n  clientDynamicModules() {\n    return {\n      name: 'constants.js',\n      content: `export const SOURCE_DIR = '${context.sourceDir}'`\n    }\n  }\n})\n```\n\n然后你可以在客户端这样使用你的模块：\n\n``` js\nimport { SOURCE_DIR } from '@dynamic/constants'\n```\n\n## extendPageData\n\n- 类型: `Function`\n- 默认值: `undefined`\n\n一个函数，用于拓展或者修改 [$page](../guide/global-computed.md#page) 对象。这个函数将会在编译器为每个页面执行一次。\n\n```js\nmodule.exports = {\n  extendPageData ($page) {\n    const {\n      _filePath,           // 源文件的绝对路径\n      _computed,           // 在构建期访问全局的计算属性，如：_computed.$localePath.\n      _content,            // 源文件的原始内容字符串\n      _strippedContent,    // 源文件剔除掉 frontmatter 的内容字符串\n      key,                 // 页面唯一的 hash key\n      frontmatter,         // 页面的 frontmatter 对象\n      regularPath,         // 当前页面遵循文件层次结构的默认链接\n      path,                // 当前页面的实际链接（在 permalink 不存在时，使用 regularPath ）\n    } = $page\n\n    // 1. Add extra fields.\n    $page.xxx = 'xxx'\n\n    // 2. Change frontmatter.\n    frontmatter.sidebar = 'auto'\n  }\n}\n```\n\n::: warning 注意\n那些以 `_` 开头的字段意味着你只能在编译期访问。\n:::\n\n例子：\n\n``` js\nmodule.exports = {\n  extendPageData ($page) {\n    $page.size = ($page._content.length / 1024).toFixed(2) + 'kb'\n  }\n}\n```\n\n然后你可以在任意的 React 组件中通过 `useData` 钩子和 `$page.size` 来访问这个变量。\n\n## additionalPages\n\n- 类型: `Array|AsyncFunction`\n- 默认值: `undefined`\n\n增加一个指向某个 markdown 文件的页面：\n\n```js\nconst path = require('path')\n\nmodule.exports = {\n  additionalPages: [\n    {\n     path: '/readme/',\n     filePath: path.resolve(__dirname, '../../README.md')\n    }\n  ]\n}\n```\n\n或增加一个具有明确内容的页面：\n\n```js\nmodule.exports = {\n  async additionalPages () {\n    // 注意 MdPress 没有任何内置的请求库，\n    // 你需要自己安装它。\n    const rp = require('request-promise')\n    const content = await rp('https://raw.githubusercontent.com/docschina/mdpress/master/CHANGELOG.md')\n    return [\n      {\n        path: '/changelog/',\n        content\n      }\n    ]\n  }\n}\n```\n\n或增加一个纯粹的路由：\n\n```js\nmodule.exports = {\n  additionalPages: [\n    {\n       path: '/alpha/',\n       frontmatter: {\n          layout: 'MyLayout'\n       }\n    }\n  ]\n}\n```\n\n## globalUIComponents\n\n- 类型: `Array|String`\n- 默认值: `undefined`\n\n你可能想注入某些全局的 UI，并固定在页面中的某处，如  `BackToTop`, `Popup`。在 MdPress 中，**一个全局 UI 就是一个 React 组件**。你可以直接配置该全局组件的名称，如：\n\n``` js\nmodule.exports = {\n  globalUIComponents: [\n    'Component1',\n    'Component2'\n  ]\n}\n```\n\nMdPress 将会自动将这些组件注入到布局组件的隔壁：\n\n```html\n<div id=\"app\">\n  <div class=\"theme-container\"> ... </div> \x3c!-- Layout Component --\x3e\n  <div class=\"global-ui\">\n    <Component1/>\n    <Component2/>\n</div>\n</div>\n```\n\n## extendCli\n\n- 类型: `function`\n- 默认值: `undefined`\n\n注册一个额外的 command 来增强 MdPress 的 CLI。这个函数将会以一个 [CAC](https://github.com/cacjs/cac) 的实例作为第一个参数被调用。\n\n```js\nmodule.exports = {\n  extendCli (cli) {\n    cli\n      .command('info [targetDir]', '')\n      .option('--debug', 'display info in debug mode')\n      .action((dir = '.') => {\n        console.log('Display info of your website')\n      })\n  }\n}\n```\n\n现在你可以在你项目中使用 `mdpress info [targetDir]` 了！\n\n::: tip\n值得注意的是，一个自定义的 command 需要 MdPress 像 `mdpress dev` 或 `mdpress build` 去定位到你的站点配置，所以在开发一个 command 时，请确保引导用户去传入 `targetDir` 作为 CLI 参数的一部分。\n:::\n\n"}))};var o=r(t(0)),a=r(t(608));function r(n){return n&&n.__esModule?n:{default:n}}},604:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){return r.default.createElement("svg",{className:"icon outbound",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},r.default.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),r.default.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))};var o,a=t(0),r=(o=a)&&o.__esModule?o:{default:o};t(606)},605:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=(0,a.default)().$page,t=n.pageKey,i=void 0===t?e.key:t,u=n.className,l=n.slotKey,c=void 0===l?"default":l;(0,s.setGlobalInfo)("pageKey",i);var d=r.default[i]||function(){return null};return o.default.createElement(d,{className:u,slotKey:c})};var o=i(t(0)),a=i(t(99)),r=i(t(164)),s=t(36);function i(n){return n&&n.__esModule?n:{default:n}}t(607)},606:function(n,e,t){},607:function(n,e,t){},608:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=h(t(100)),a=h(t(29)),r=h(t(166)),s=t(0),i=h(s),u=h(t(4)),l=t(101),c=h(t(99)),d=h(t(102)),p=t(165),f=h(t(609)),m=h(t(605)),g=h(t(604)),v=h(t(37));function h(n){return n&&n.__esModule?n:{default:n}}var b="server"===(0,t(36).getEnv)();function x(n){var e=n.markDownString,t=n.className,u=n.slotKey,h=(0,s.useRef)(n.md||v.default.createMD()).current,x=(0,c.default)(),_=x.$site,w=x.$page,j=(0,s.useState)(null),S=(0,a.default)(j,2),k=S[0],P=S[1],C=(0,s.useRef)(null);return(0,s.useEffect)((function(){P(document.getElementById(u))}),[]),(0,s.useEffect)((function(){"default"!==u&&C&&k&&((0,o.default)(k.childNodes).forEach((function(n,e){var t=C.current.childNodes[e];t?C.current.replaceChild(n,t):C.current.appendChild(n)})),k.parentNode.removeChild(k))}),[k]),"default"!==u?i.default.createElement("div",{ref:C}):((0,p.useComponentWillMount)((function(){!function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};n.use((function(n){return(0,l.SupportReactComponent)(n,{allowErrorLog:!0,sandbox:(0,r.default)({},e,t),babelInit:function(n){n.availablePlugins.filterXSS&&(n.availablePlugins.filterXSS=function(){return{}})}})}))}(h,d.default,{$site:_,$page:w,JSON:JSON,ClientOnly:f.default,console:console,Content:m.default,OutboundLink:g.default,$withBase:function(n){var e=_.base;return"/"===n.charAt(0)?e+n.slice(1):n}})})),b?i.default.createElement(y,{html:h.render(e),slotKey:u,className:t}):(0,s.useMemo)((function(){var n=h.render(e);return i.default.createElement(y,{html:n,slotKey:u,className:t})}),[e,u,t]))}function y(n){var e=n.html,t=n.slotKey,o=n.className;return i.default.createElement("div",{className:"content content__"+t+" "+o,dangerouslySetInnerHTML:{__html:e}})}x.propTypes={markDownString:u.default.string,className:u.default.string,scrollAnchor:u.default.bool,mdInit:u.default.func,md:u.default.object},x.defaultProps={markDownString:"",className:"",scrollAnchor:!0,mdInit:function(){}},e.default=x},609:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=s(t(29));e.default=function(n){var e=(0,a.useState)(!1),t=(0,o.default)(e,2),s=t[0],u=t[1],l=n.children,c=n.onSSR,d=void 0===c?r.default.createElement(i,null):c;return(0,a.useEffect)((function(){u(!0)}),[]),s?l:d};var a=t(0),r=s(a);function s(n){return n&&n.__esModule?n:{default:n}}var i=function(){return r.default.createElement("span",null)}}}]);